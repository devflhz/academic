{"version":3,"sources":["utils/RequestManager.ts","utils/LoginManager.tsx","components/Layout/Navigation/Menu/Menu.tsx","components/Layout/Navigation/TopBar/LogoutButton.tsx","components/Layout/Navigation/TopBar/DarkModeButton.tsx","Constants.ts","components/Layout/Navigation/TopBar/TopBar.tsx","components/Layout/Layout.tsx","img/tutores.svg","img/alumnos.svg","img/docente.svg","img/pagos.svg","img/asistencia.svg","img/constancias.svg","components/Pages/Private/Home/Section/Section.tsx","components/Pages/Private/Home/Home.tsx","components/Routes/PrivateRoute.tsx","components/Routes/PublicRoute.tsx","img/logo.jpg","components/Pages/Public/Login/Login.tsx","models/Schema.ts","models/Aula.ts","models/Alumno.ts","models/Functions.ts","utils/ValidationManager.ts","components/Pages/Private/Error/ErrorMessage.tsx","components/Pages/Private/Alumnos/Modals/Edit.tsx","components/Pages/Private/Alumnos/Modals/Add.tsx","components/Layout/Navigation/Spinning/Spinning.tsx","components/Pages/Private/Alumnos/Alumnos.tsx","models/Tutor.ts","components/Pages/Private/Tutores/Modals/Edit.tsx","components/Pages/Private/Tutores/Modals/Add.tsx","components/Pages/Private/Tutores/Tutores.tsx","models/Docente.ts","components/Pages/Private/Docentes/Modals/Edit.tsx","components/Pages/Private/Docentes/Modals/Add.tsx","components/Pages/Private/Docentes/Modals/ListaAlumnos.tsx","components/Pages/Private/Docentes/Docentes.tsx","components/Pages/Private/Asistencia/Registro/Registro.tsx","components/Pages/Private/Asistencia/Lista/Student.tsx","components/Pages/Private/Asistencia/Lista/Class.tsx","components/Pages/Private/Asistencia/Lista/Lista.tsx","components/Pages/Private/Asistencia/Asistencia.tsx","utils/PDFManager.ts","components/Pages/Private/Constancias/Alumnos/Alumnos.tsx","components/Pages/Private/Constancias/Docentes/Docentes.tsx","components/Pages/Private/Constancias/Constancias.tsx","models/Concepto.ts","models/Pago.ts","components/Pages/Private/Pagos/Modals/Add.tsx","components/Pages/Private/Pagos/Pagos.tsx","components/Routes/AdminRoute.tsx","components/Pages/Private/Aulas/Modals/Edit.tsx","components/Pages/Private/Aulas/Modals/Add.tsx","components/Pages/Private/Aulas/Aulas.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RequestType","APIUri","send","method","controller","data","parameter","filters","handle","skipAlert","a","axios","request","url","headers","sessionStorage","getItem","response","GET","status","Swal","fire","title","text","icon","login","email","password","then","setItem","token","idDocente","nombre","apellidoPaterno","apellidoMaterno","administrador","catch","error","console","log","isLogin","Menu","history","useHistory","goTo","path","push","Navbar","collapseOnSelect","expand","bg","variant","Container","Toggle","Collapse","id","className","Button","onClick","LogoutButton","state","clear","window","location","reload","this","handleLogout","Component","DarkModeButton","props","isDarkMode","type","setState","localStorage","Constants","TopBar","Brand","Text","Layout","renderNavigationMenu","children","Section","description","logo","image","Card","Header","Title","Body","Img","src","Footer","Home","IoMdSchool","Alumnos","FaUserTie","Tutores","FaChalkboardTeacher","Docentes","FaMoneyBill","Pagos","FaClipboardList","Asistencia","BsDownload","Constancias","PrivateRoute","component","rest","render","to","PublicRoute","restricted","Login","handleEmail","bind","handlePassword","handleLogin","e","target","value","href","Row","Col","Logo","alt","as","Form","Group","controlId","Label","Control","onChange","placeholder","z","number","required_error","invalid_type_error","max","message","min","numeric","string","refine","test","toString","trim","file","phone","val","isNumeric","curp","regex","aulaSchema","object","idAula","alumnoSchema","idAlumno","nombres","aula","activo","boolean","optional","default","aulaNavigation","presente","isDeudor","setKeyValue","obj","key","newValue","currentValue","parseInt","JSON","parse","validate","field","schema","safeParseAsync","result","success","errors","Array","ErrorMessage","filter","includes","name","map","style","color","Edit","alumno","aulas","tutores","tutorAlumnos","remaining","selected","saveAlumno","confirmDeactivation","confirmReactivation","handleInputChange","setSelected","tutor","label","idTutorAlumno","idTutor","event","currentTarget","length","PUT","handleClose","tutorAlumno","POST","confirmButtonText","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","isConfirmed","DELETE","Modal","show","onHide","closeButton","sm","md","lg","defaultValue","options","labelledBy","Table","removeTutor","Add","postedAlumno","required","Spinning","alumnos","totalPaginas","paginaActual","showEdit","showAdd","loading","handleShow","changePage","index","updateState","finally","Math","ceil","items","startIndex","endIndex","i","Pagination","Item","active","textAlign","slice","size","tutorSchema","numeroCelular","calle","numero","colonia","localidad","estado","pais","cp","saveTutor","docenteSchema","aulaAsignada","aulaAsignadaNavigation","isAdminTryToKillItself","docente","updateDocente","isAulaTaken","saveDocente","ListaAlumnos","docentes","listId","showList","width","Registro","fecha","Date","asistencia","loaded","queryRegistro","toISOString","substring","handleFecha","handleAula","idAlumnoNavigation","toLocaleDateString","weekday","year","month","day","asistio","idAsistencia","Student","getStyle","mode","backgroundColor","studentPresent","defaultChecked","Class","Lista","postAsistencia","forceUpdate","Tab","defaultActiveKey","Nav","fill","Link","eventKey","Content","Pane","PDFDocument","create","pdfDoc","embedFont","StandardFonts","Helvetica","helvetica","HelveticaBold","helveticaBold","page","addPage","getSize","height","fontSize","fetch","res","arrayBuffer","jpgImageBytes","embedJpg","jpgImage","jpgDims","scale","X","drawImage","x","y","drawText","font","rgb","date","toLocaleString","save","pdfBytes","URL","createObjectURL","Blob","link","document","createElement","setAttribute","body","appendChild","click","startDate","endDate","Promise","all","disabled","generatePDFAdeudo","generatePDFConducta","handleDateEvent","picker","_d","onEvent","initialSettings","generatePDFRecomendacion","conceptoSchema","idConcepto","concepto","pagoSchema","idPago","cantidad","conceptoNavigation","nullable","comprobanteDePago","formatoComprobante","idTutorNavigation","pago","conceptos","savePago","fetchAlumnos","files","reader","FileReader","readAsDataURL","that","onload","split","onerror","handleInputFiles","pagos","open","getComprobante","AdminRoute","saveAula","Aulas","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","getElementById","LightTheme","React","lazy","DarkTheme","ThemeSelector","CHOSEN_THEME","Suspense","fallback","ReactDOM","basename","process"],"mappings":"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","file":"static/js/main.44db5f3a.chunk.js","sourcesContent":["import axios from \"axios\";\nimport Swal from \"sweetalert2\";\n\nexport const APIUri = \"https://localhost:5000/api\";\n\nexport enum RequestType {\n    GET = \"get\",\n    POST = \"post\",\n    PUT = \"put\",\n    DELETE = \"delete\",\n}\n\nexport async function send<T>(\n    method: RequestType,\n    controller: string,\n    data?: any | null,\n    parameter?: any,\n    filters?: string,\n    handle?: () => void,\n    skipAlert?: boolean\n): Promise<T> {\n    let response = await axios.request({\n        url: `${APIUri}/${controller}${parameter ? `/${parameter}` : \"\"}${\n            filters ? `/${filters}` : \"\"\n        }`,\n        method: method,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${sessionStorage.getItem(\"token\")}`,\n            \"Access-Control-Allow-Origin\": \"*\"\n        },\n        data: data,\n    });\n    if (!skipAlert) {\n      if (method === RequestType.GET) {\n        if (response.status !== 200) {\n          await Swal.fire({\n            title: \"Error\",\n            text: \"No se pudieron obtener los datos.\",\n            icon: \"error\",\n          });\n        }\n      } else {\n        if (\n            response.status === 200 ||\n            response.status === 201 ||\n            response.status === 204\n        ) {\n          let okay = await Swal.fire({\n            title: \"Éxito\",\n            text: \"La operación se realizo correctamente.\",\n            icon: \"success\",\n          });\n          if (okay && handle) handle();\n        } else if (response.status === 409) {\n          await Swal.fire({\n            title: \"Error\",\n            text: \"El registro ya existe.\",\n            icon: \"error\",\n          });\n        } else {\n          let okay = await Swal.fire({\n            title: \"Error\",\n            text: \"La operación no se realizo correctamente.\",\n            icon: \"error\",\n          });\n          if (okay && handle) handle();\n        }\n      }\n    }\n    return response.data;\n}\n","import axios from 'axios';\nimport {APIUri} from \"./RequestManager\";\n\nasync function login(email: string, password: string) {\n    await axios({\n        method: 'post',\n        url: `${APIUri}/authenticate`,\n        data: { email: email, password: password }\n    }).then((response) => {\n        if ('token' in response.data) {\n            sessionStorage.setItem(\"token\", response.data.token);\n            sessionStorage.setItem(\"idDocente\", response.data.idDocente);\n            sessionStorage.setItem(\"usuario\", `${response.data.nombre} ${response.data.apellidoPaterno} ${response.data.apellidoMaterno}`);\n            sessionStorage.setItem(\"administrador\", `${response.data.administrador}`);\n        }\n    }).catch((error) => {\n        console.log(error);\n    });\n}\n\nfunction isLogin() {\n    if (sessionStorage.getItem('token'))\n        return true;\n    else\n        return false;\n}\n\nfunction parseJwt(token: string) {\n    try {\n        return JSON.parse(atob(token.split('.')[1]));\n    } catch (e) {\n        return null;\n    }\n}\n\nexport { login, isLogin, parseJwt }","import { useHistory } from 'react-router-dom';\nimport { Button, Container, Navbar } from 'react-bootstrap';\nimport { BsCardChecklist, BsDownload } from \"react-icons/bs\";\nimport {FaChalkboardTeacher, FaMoneyBill, FaUserTie, FaClipboardList, FaCube} from \"react-icons/fa\";\nimport { IoMdSchool } from \"react-icons/io\";\nimport \"./Menu.css\"\n\nconst Menu = () => {\n    const history = useHistory();\n    const goTo = (path: string) => history.push(path);\n    if (sessionStorage.getItem(\"administrador\") === \"true\") {\n        return (\n            <div>\n                <Navbar collapseOnSelect expand=\"sm\" bg=\"danger\" variant=\"dark\">\n                    <Container>\n                        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                        <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end\">\n                            <Button id=\"menu-btn\" className=\"btn-block\" variant=\"danger\" onClick={() => goTo(\"/alumnos\")}><IoMdSchool /> Alumnos</Button>\n                            <Button id=\"menu-btn\" className=\"btn-block\" variant=\"danger\" onClick={() => goTo(\"/tutores\")}><FaUserTie /> Tutores</Button>\n                            <Button id=\"menu-btn\" className=\"btn-block\" variant=\"danger\" onClick={() => goTo(\"/docentes\")}><FaChalkboardTeacher /> Docentes</Button>\n                            <Button id=\"menu-btn\" className=\"btn-block\" variant=\"danger\" onClick={() => goTo(\"/pagos\")}><FaMoneyBill /> Pagos</Button>\n                            <Button id=\"menu-btn\" className=\"btn-block\" variant=\"danger\" onClick={() => goTo(\"/aulas\")}><FaCube /> Aulas</Button>\n                            <Button id=\"menu-btn\" className=\"btn-block\" variant=\"danger\" onClick={() => goTo(\"/asistencia\")}><FaClipboardList /> Asistencia</Button>\n                            <Button id=\"menu-btn\" className=\"btn-block\" variant=\"danger\" onClick={() => goTo(\"/constancias\")}><BsDownload /> Constancias</Button>\n                        </Navbar.Collapse>\n                    </Container>\n                </Navbar>\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <Navbar collapseOnSelect expand=\"sm\" bg=\"danger\" variant=\"dark\">\n                    <Container>\n                        {/* <Navbar.Brand href=\"/home\">Areas</Navbar.Brand> */}\n                        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                        <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end\">\n                            <Button className=\"btn-block\" variant=\"danger\" onClick={() => goTo(\"/asistencia\")}><BsCardChecklist /> Asistencia</Button>\n                        </Navbar.Collapse>\n                    </Container>\n                </Navbar>\n            </div>\n        );\n    }\n}\n\nexport default Menu;","import React, { Component } from \"react\";\nimport { Button, Navbar } from \"react-bootstrap\";\n\nexport interface Props {\n\n}\n\nexport interface State {\n\n}\n\nclass LogoutButton extends Component<Props, State> {\n    state = {}\n    handleLogout() {\n        sessionStorage.clear();\n        window.location.reload();\n    }\n    render() {\n        return (\n            sessionStorage.getItem('token') ?\n                (<Navbar.Collapse className=\"justify-content-end\">\n                    <Button id=\"logout-button\" className=\"btn btn-warning\" onClick={this.handleLogout}>Salir</Button>\n                </Navbar.Collapse>)\n                : (<div></div>)\n        )\n    }\n}\n\nexport default LogoutButton;","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport {FaMoon, FaSun} from \"react-icons/all\";\n\nexport interface Props {\n}\n\nexport interface State {\n    isDarkMode: boolean;\n}\n\nclass DarkModeButton extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            isDarkMode: false,\n        };\n    }\n    render() {\n        return (\n            <Button id=\"dark-mode-btn\" type=\"button\" className=\"btn btn-danger\" onClick={() => {\n                this.setState({ isDarkMode: !this.state.isDarkMode})\n                localStorage.setItem(\"TYPE_OF_THEME\", this.state.isDarkMode ? \"dark\" : \"light\")\n            }}>\n                {this.state.isDarkMode ? <FaSun/> : <FaMoon/>}\n            </Button>\n        )\n    }\n}\n\nexport default DarkModeButton;","export const Constants = {\n    Title: 'Creciendo Juntos'\n}","import { useHistory } from 'react-router-dom';\nimport {Container, Navbar} from 'react-bootstrap';\nimport LogoutButton from './LogoutButton';\nimport DarkModeButton from \"./DarkModeButton\";\nimport {Constants} from \"../../../../Constants\";\nimport \"./TopBar.css\";\n\nconst TopBar = () => {\n    const history = useHistory();\n    const goTo = (path: string) => history.push(path);\n\n    return (\n        <div>\n            <Navbar collapseOnSelect expand=\"sm\" bg=\"danger\" variant=\"dark\">\n                <Container>\n                    <button className=\"unset\">\n                        <Navbar.Brand onClick={() => goTo(\"/home\")}>{Constants.Title}</Navbar.Brand>\n                    </button>\n                    <DarkModeButton />\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                    <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end\">\n                        <Navbar.Text>\n                            Inicio sesión: <button id=\"logged-in\" className=\"unset\" onClick={() => goTo(\"/home\")}>\n                                {sessionStorage.getItem('usuario') ?? \"Nadie\"}\n                            </button>\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                    \n                    <LogoutButton />\n                </Container>\n            </Navbar>\n        </div>\n    );\n}\n\nexport default TopBar;","import React, { Component } from \"react\";\nimport { isLogin } from \"../../utils/LoginManager\";\nimport Menu from \"./Navigation/Menu/Menu\";\nimport TopBar from \"./Navigation/TopBar/TopBar\";\nimport \"./Layout.css\"\n\nclass Layout extends Component {\n\n    renderNavigationMenu() {\n        if (isLogin()) {\n            return (\n                <Menu />\n            );\n        } else {\n            return <></>;\n        }\n    }\n    render() {\n        return (\n            <>\n                <div className=\"wrapper\">\n                    <div className=\"NavMenu\">\n                        <TopBar />\n                    </div>\n                    <div className=\"NavigationMenu\">\n                        {this.renderNavigationMenu()}\n                    </div>\n                    <div className=\"Content\">\n                        <div className=\"Spacer\"></div>\n                        <div className=\"Childs\">\n                            {this.props.children}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Layout;","export default __webpack_public_path__ + \"static/media/tutores.623b32a3.svg\";","export default __webpack_public_path__ + \"static/media/alumnos.c8422430.svg\";","export default __webpack_public_path__ + \"static/media/docente.8031ce7d.svg\";","export default __webpack_public_path__ + \"static/media/pagos.f82047ef.svg\";","export default __webpack_public_path__ + \"static/media/asistencia.20cdb076.svg\";","export default __webpack_public_path__ + \"static/media/constancias.4f169baa.svg\";","import React from 'react';\nimport {Button, Card} from 'react-bootstrap';\nimport { IconType } from 'react-icons';\nimport { FaArrowCircleRight } from 'react-icons/fa';\nimport { useHistory } from 'react-router-dom';\nimport \"./Section.css\"\n\n\ninterface Props {\n    title: string;\n    description: string;\n    logo: IconType;\n    image: any;\n    path: string;\n}\n\nconst Section = (props: Props) => {\n    const { title, description, logo, image, path } = props;\n    const history = useHistory();\n    const goTo = (path: string) => history.push(path);\n    return (\n        <div className=\"gridItem\">\n            <Card>\n                <Card.Header>\n                    <Card.Title>\n                        <h3>\n                            {logo} <b>{title}</b>\n                        </h3>\n                    </Card.Title>\n                </Card.Header>\n                <Card.Body>\n                    {description}\n                    <br/> <br/>\n                    <Card.Img src={image} />\n                </Card.Body>\n                <Card.Footer>\n                    <Button variant=\"danger\" onClick={() => goTo(path)} >\n                        Abrir <FaArrowCircleRight/>\n                    </Button>\n                </Card.Footer>\n            </Card>\n        </div>\n    );\n}\n\nexport default Section;","import React, { Component } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Tutores from '../../../../img/tutores.svg';\nimport Alumnos from '../../../../img/alumnos.svg';\nimport Docentes from '../../../../img/docente.svg';\nimport Pagos from '../../../../img/pagos.svg';\nimport Asistencia from '../../../../img/asistencia.svg';\nimport Constancias from '../../../../img/constancias.svg';\nimport {IoMdSchool} from \"react-icons/io\";\nimport {FaChalkboardTeacher, FaMoneyBill, FaUserTie, FaClipboardList} from \"react-icons/fa\";\nimport {BsDownload} from \"react-icons/bs\";\nimport Section from \"./Section/Section\";\nimport \"./Home.css\"\n\ninterface Props {\n    title: string;\n}\n\nclass Home extends Component<Props> {\n    \n    state = {}\n    render() {\n        return (\n            <div className=\"Home\">\n                <Card className=\"justify-content-center\">\n                    <Card.Header>\n                        <Card.Title>\n                            <h1><b>Sistema de Administración</b></h1>\n                            <h6><b>{this.props.title}</b></h6>\n                        </Card.Title>\n                    </Card.Header>\n                    <Card.Body>\n                        <div className=\"displayGrid\">\n                            <Section title=\"Alumnos\" logo={IoMdSchool} image={Alumnos} path=\"/alumnos\" description=\"Aqui puede administrar a los alumnos\"  />\n                            <Section title=\"Tutores\" logo={FaUserTie} image={Tutores} path=\"/tutores\" description=\"\" />\n                            <Section title=\"Docentes\" logo={FaChalkboardTeacher} image={Docentes} path=\"/docentes\" description=\"\" />\n                            <Section title=\"Pagos\" logo={FaMoneyBill} image={Pagos} path=\"/pagos\" description=\"\" />\n                            <Section title=\"Asistencia\" logo={FaClipboardList} image={Asistencia} path=\"/asistencia\" description=\"\" />\n                            <Section title=\"Constancias\" logo={BsDownload} image={Constancias} path=\"/constancias\" description=\"\" />\n                        </div>\n                    </Card.Body>\n                </Card>\n            </div >\n        );\n    }\n}\n\nexport default Home;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin } from '../../utils/LoginManager';\n\nconst PrivateRoute = ({ component: Component, ...rest }: any) => {\n    return (\n        <Route {...rest} render={props => (\n            isLogin() ?\n                <Component {...props} />\n                : <Redirect to=\"/login\" />\n        )} />\n    );\n};\n\nexport default PrivateRoute;","import { Route, Redirect } from 'react-router-dom';\nimport { isLogin } from '../../utils/LoginManager';\n\nconst PublicRoute = ({ component: Component, restricted, ...rest }: any) => {\n    return (\n        <Route {...rest} render={props => (\n            isLogin() && restricted\n                ? <Redirect to=\"/login\" />\n                : <Component {...props} />\n        )} />\n    );\n};\n\nexport default PublicRoute;","export default __webpack_public_path__ + \"static/media/logo.ddde4466.jpg\";","import React, { Component } from 'react';\nimport { Form, Button, Card, Row, Col } from 'react-bootstrap';\nimport Logo from '../../../../img/logo.jpg';\nimport { login, isLogin } from '../../../../utils/LoginManager';\n\nexport interface Props {\n\n}\n\nexport interface State {\n    email: string,\n    password: string,\n    error: string\n}\n\nclass Login extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            error: \"\"\n        }\n        this.handleEmail = this.handleEmail.bind(this);\n        this.handlePassword = this.handlePassword.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    handleEmail(e: any) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    handlePassword(e: any) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    async handleLogin(e: any) {\n        await login(this.state.email, this.state.password);\n        if (!isLogin())\n            this.setState({ error: \"Email o contraseña incorrecto.\" });\n        else {\n            window.location.href = \"/home\";\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <br />\n                <Row>\n                    <Col>\n                        <img src={Logo} alt=\"Logo\" />\n                    </Col>\n                    <Col>\n                        <Card>\n                            <Card.Header as=\"h5\">Iniciar sesión</Card.Header>\n                            <Card.Body>\n                                <Card.Text>\n                                    Inicie sesión con su correo y contraseña.\n                                </Card.Text>\n                                <Form>\n                                    <Form.Group controlId=\"formBasicEmail\">\n                                        <Form.Label>Correo electrónico</Form.Label>\n                                        <Form.Control value={this.state.email} onChange={this.handleEmail} type=\"email\" placeholder=\"Correo electrónico\" />\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formBasicPassword\">\n                                        <Form.Label>Contraseña</Form.Label>\n                                        <Form.Control value={this.state.password} onChange={this.handlePassword} type=\"password\" placeholder=\"Contraseña\" />\n                                        <Form.Text className=\"text-muted\">\n                                            No compartiremos esta información con nadie.\n                                        </Form.Text>\n                                        <Form.Text className=\"text-muted\">\n                                            {this.state.error}\n                                        </Form.Text>\n                                    </Form.Group>\n                                    <Button variant=\"danger\" onClick={this.handleLogin}>\n                                        Iniciar sesión\n                                    </Button>\n                                </Form>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Login;","import { z } from \"zod\";\n\nconst CURPRegex = /^([A-Z][AEIOUX][A-Z]{2}\\d{2}(?:0[1-9]|1[0-2])(?:0[1-9]|[12]\\d|3[01])[HM](?:AS|B[CS]|C[CLMSH]|D[FG]|G[TR]|HG|JC|M[CNS]|N[ETL]|OC|PL|Q[TR]|S[PLR]|T[CSL]|VZ|YN|ZS)[B-DF-HJ-NP-TV-Z]{3}[A-Z\\d])(\\d)$/;\n\nconst id = z.number({\n    required_error: \"Es requerido.\",\n    invalid_type_error: \"Solo se permiten numeros.\",\n}).max(255, {\n    message: \"Solo se permiten 255 letras.\"\n}).min(0, {\n    message: \"El campo no debe estar vacio.\"\n});\n\nconst numeric = z.number({\n    required_error: \"Es requerido.\",\n}).min(1, {\n    message: \"El campo no debe estar vacio.\"\n});\n\nconst text = z.string({\n    required_error: \"Es requerido.\",\n    invalid_type_error: \"Solo se permiten letras.\",\n}).max(255, {\n    message: \"Solo se permiten 255 letras.\"\n}).min(1, {\n    message: \"El campo no debe estar vacio.\"\n}).refine(value => {\n    if (/\\S/.test(value)) {\n        return value.toString().trim();\n    }\n}, {\n    message: \"No se permiten espacios en blanco.\"\n});\n\nconst file = z.string({\n    required_error: \"Es requerido.\",\n    invalid_type_error: \"Solo se permiten letras.\",\n}).min(1, {\n    message: \"El campo no debe estar vacio.\"\n});\n\nconst numericString = z.string({\n    required_error: \"Es requerido.\",\n    invalid_type_error: \"Solo se permiten numeros.\",\n}).max(255, {\n    message: \"Solo se permiten 255 letras.\"\n}).min(1, {\n    message: \"Debe ser al menos 1 numero.\"\n});\n\nconst phone = z.string({\n    required_error: \"Es requerido.\",\n    invalid_type_error: \"Solo se permiten numeros.\",\n}).max(10, {\n    message: \"Solo se permiten 10 letras.\"\n}).min(10, {\n    message: \"Deben ser al menos 10 numeros.\"\n}).refine(async (val) => isNumeric(val), {\n    message: \"Solo se permiten numeros.\"\n});\n\nconst url = z.string({\n    required_error: \"Es requerido.\",\n    invalid_type_error: \"Debe ser un URL.\",\n}).url();\n\nconst email = z.string({\n    required_error: \"Es requerido.\",\n    invalid_type_error: \"Solo se permiten letras.\",\n}).email({\n    message: \"Debe ser un email.\"\n});\n\nconst curp = z.string({\n    required_error: \"Es requerido.\",\n    invalid_type_error: \"No es el tipo de dato correcto.\",\n}).regex(CURPRegex, \"El formato del CURP es incorrecto.\").max(18).min(0);\n\nfunction isNumeric(val: string) {\n    return /^-?\\d+$/.test(val);\n}\n\nexport {\n    id,\n    text,\n    numeric,\n    email,\n    url,\n    curp,\n    phone,\n    file,\n    numericString\n};","import { z } from 'zod';\nimport { text, id} from \"./Schema\";\n\nconst aulaSchema = z.object({\n  idAula: id,\n  nombre: text,\n});\n\ntype IAula = z.TypeOf<typeof aulaSchema>;\n\nexport type { IAula };\n\nexport { aulaSchema };","import {aulaSchema} from \"./Aula\";\nimport { z } from \"zod\";\nimport {curp, numeric, text, id} from \"./Schema\";\n\nconst alumnoSchema = z.object({\n  idAlumno: id,\n  nombres: text,\n  apellidoPaterno: text,\n  apellidoMaterno: text,\n  curp: curp,\n  aula: numeric,\n  activo: z.boolean().optional().default(true),\n  aulaNavigation: aulaSchema.optional(),\n  presente: z.boolean().optional(),\n  isDeudor: z.boolean().optional(),\n});\n\ntype IAlumno = z.TypeOf<typeof alumnoSchema>;\n\nexport type { IAlumno };\nexport { alumnoSchema };\n","const setKeyValue = function <T extends object, U extends keyof T>(\n  obj: T,\n  key: U,\n  newValue: T[U]\n): T {\n  let currentValue = obj[key];\n  newValue = parse(currentValue, newValue);\n  obj[key] = newValue;\n  return obj;\n};\n\nfunction parse(currentValue: any, newValue: any): any {\n  switch (typeof currentValue) {\n    case \"number\":\n      if (newValue !== \"\") {\n        return parseInt(newValue);\n      } else {\n        return 0;\n      }\n    case \"string\":\n      return newValue;\n    case \"boolean\":\n      return JSON.parse(newValue);\n    default:\n      return null;\n  }\n}\n\nexport { setKeyValue };\n","import {ZodIssue, ZodObject} from \"zod\";\n\nasync function validate(field: string, data: any, schema: ZodObject<any>): Promise<ZodIssue[]> {\n    const result = await schema.safeParseAsync(data);\n    if (!result.success) {\n        console.log(result.error.errors)\n        return result.error.errors;\n    }\n    return new Array<ZodIssue>();\n}\n\nexport {validate};\n","import React, {Component} from 'react';\nimport {ZodIssue} from \"zod\";\n\ninterface Props {\n  errors: Array<ZodIssue>;\n  name: string;\n}\n\nclass ErrorMessage extends Component<Props> {\n    render() {\n        return (\n            <div>\n                <small>{this.props.errors.filter(error => error.path.includes(this.props.name)).map(error => <p style={{ color: \"red\" }}>{error.message}</p>)}</small>\n            </div>\n        );\n    }\n}\n\nexport default ErrorMessage;","import React, { Component } from 'react';\nimport { Button, Col, Form, Modal, Row, Table } from \"react-bootstrap\";\nimport { IAula } from \"../../../../../models/Aula\";\nimport { alumnoSchema, IAlumno } from \"../../../../../models/Alumno\";\nimport { setKeyValue } from \"../../../../../models/Functions\";\nimport { validate } from \"../../../../../utils/ValidationManager\";\nimport { RequestType, send } from \"../../../../../utils/RequestManager\";\nimport { ZodIssue } from \"zod\";\nimport ErrorMessage from \"../../Error/ErrorMessage\";\nimport Swal from \"sweetalert2\";\nimport { Option } from \"react-multi-select-component/dist/types/lib/interfaces\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport { ITutor } from \"../../../../../models/Tutor\";\nimport { ITutorAlumno } from \"../../../../../models/TutorAlumno\";\n\nexport interface Props {\n    show: boolean,\n    alumno: IAlumno,\n    handleClose: () => void\n}\n\nexport interface State {\n    alumno: IAlumno,\n    aulas: IAula[],\n    tutores: Option[],\n    tutorAlumnos: ITutorAlumno[],\n    remaining: Option[],\n    errors: Array<ZodIssue>,\n    selected: Array<Option>,\n}\n\nclass Edit extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            alumno: this.props.alumno,\n            aulas: [],\n            tutores: [],\n            tutorAlumnos: [],\n            remaining: [],\n            errors: [],\n            selected: [],\n        }\n        this.saveAlumno = this.saveAlumno.bind(this);\n        this.confirmDeactivation = this.confirmDeactivation.bind(this);\n        this.confirmReactivation = this.confirmReactivation.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.setSelected = this.setSelected.bind(this);\n    }\n\n    async componentDidMount() {\n        this.setState({ aulas: await send<IAula[]>(RequestType.GET, \"Aula\") });\n        let response = await send<ITutor[]>(RequestType.GET, \"AlumnoTutor\", null, this.state.alumno.idAlumno);\n        let tutores = response.map(tutor => {\n            return {\n                label: tutor.nombres + \" \" + tutor.apellidoPaterno + \" \" + tutor.apellidoMaterno,\n                value: tutor\n            }\n        })\n        this.setState({ tutores })\n        this.setState({ selected: tutores })\n        this.setState({\n            tutorAlumnos: tutores.map(tutor => {\n                return {\n                    idTutorAlumno: 0,\n                    idTutor: tutor.value.idTutor,\n                    idAlumno: this.state.alumno.idAlumno\n                }\n            })\n        })\n        response = await send<ITutor[]>(RequestType.GET, \"GetRemainingTutorsByAlumno\", null, this.state.alumno.idAlumno);\n        let remaining = response.map(tutor => {\n            return {\n                label: tutor.nombres + \" \" + tutor.apellidoPaterno + \" \" + tutor.apellidoMaterno,\n                value: tutor\n            }\n        })\n        await this.setState({ remaining })\n    }\n\n    async setSelected(selected: Array<Option>) {\n        this.setState({ selected })\n        this.setState({\n            tutorAlumnos: selected.map(tutor => {\n                return {\n                    idTutorAlumno: 0,\n                    idTutor: tutor.value.idTutor,\n                    idAlumno: this.state.alumno.idAlumno\n                }\n            })\n        })\n    }\n\n    async handleInputChange(event: React.FormEvent<HTMLInputElement>) {\n        let alumno = setKeyValue(this.state.alumno, event.currentTarget.name as keyof IAlumno, event.currentTarget.value);\n        this.setState({\n            errors: await validate(event.currentTarget.name, alumno, alumnoSchema)\n        })\n        this.setState({ alumno })\n    }\n\n    async saveAlumno() {\n        if (this.state.errors.length === 0) {\n            await send(RequestType.PUT, \"Alumno\", this.state.alumno, this.state.alumno.idAlumno, \"\", this.props.handleClose)\n            for (const tutorAlumno of this.state.selected.map(tutor => { return { idTutor: tutor.value.idTutor, idAlumno: this.state.alumno.idAlumno } as ITutorAlumno })) {\n                await send<ITutorAlumno>(RequestType.POST, \"AlumnoTutor\", tutorAlumno, null, \"\", this.props.handleClose, true);\n            }\n        } else {\n            await Swal.fire({\n                title: 'Error',\n                text: 'Revise los campos en rojo',\n                icon: 'error',\n                confirmButtonText: 'Ok'\n            })\n        }\n    }\n\n    async confirmDeactivation() {\n        let result = await Swal.fire({\n            title: \"Esta segura?\",\n            text: \"Se desactivara, es posible volver a reactivar.\",\n            icon: \"warning\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: \"Desactivar\",\n            cancelButtonText: \"Cancelar\",\n        });\n        if (result.isConfirmed) {\n            await send(RequestType.DELETE, \"Alumno\", null, this.state.alumno.idAlumno, \"\", this.props.handleClose);\n        }\n    }\n\n    async confirmReactivation() {\n        let result = await Swal.fire({\n            title: \"Esta segura?\",\n            text: \"Se reactivara, es posible volver a desactivar.\",\n            icon: \"warning\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: \"Reactivar\",\n            cancelButtonText: \"Cancelar\",\n        });\n        if (result.isConfirmed) {\n            await send(RequestType.PUT, \"ReactivateAlumno\", null, this.state.alumno.idAlumno, \"\", this.props.handleClose);\n        }\n    }\n\n    async removeTutor(id: number) {\n        let result = await Swal.fire({\n            title: \"Esta segura?\",\n            text: \"Se eliminara el tutor asignado al alumno.\",\n            icon: \"warning\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: \"Eliminar\",\n            cancelButtonText: \"Cancelar\",\n        });\n        if (result.isConfirmed) {\n            await send(RequestType.DELETE,\n                \"AlumnoTutor\",\n                { idTutor: id, idAlumno: this.state.alumno.idAlumno },\n                null,\n                \"\");\n            this.setState({\n                selected: this.state.selected.filter(tutor => tutor.value.idTutor !== id)\n            })\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Modal show={this.props.show} onHide={this.props.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Editar</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group controlId=\"formBasicName\">\n                            <Form.Label>Nombres</Form.Label>\n                            <Form.Control value={this.state.alumno.nombres} onChange={async (event: any) => await this.handleInputChange(event)} name=\"nombres\" type=\"text\" placeholder=\"Nombres\" />\n                            <ErrorMessage errors={this.state.errors} name=\"nombres\" />\n                        </Form.Group>\n                        <Row>\n                            <Col sm=\"12\" md=\"12\" lg=\"6\"><Form.Group controlId=\"formBasicLastName\">\n                                <Form.Label>Apellido paterno</Form.Label>\n                                <Form.Control value={this.state.alumno.apellidoPaterno} onChange={async (event: any) => await this.handleInputChange(event)} name=\"apellidoPaterno\" type=\"text\" placeholder=\"Apellido paterno\" />\n                                <ErrorMessage errors={this.state.errors} name=\"apellidoPaterno\" />\n                            </Form.Group></Col>\n                            <Col sm=\"12\" md=\"12\" lg=\"6\"><Form.Group controlId=\"formBasicSecondLastName\">\n                                <Form.Label>Apellido materno</Form.Label>\n                                <Form.Control value={this.state.alumno.apellidoMaterno} onChange={async (event: any) => await this.handleInputChange(event)} name=\"apellidoMaterno\" type=\"text\" placeholder=\"Apellido materno\" />\n                                <ErrorMessage errors={this.state.errors} name=\"apellidoMaterno\" />\n                            </Form.Group></Col>\n                        </Row>\n                        <Form.Group controlId=\"formBasicCurp\">\n                            <Form.Label>CURP</Form.Label>\n                            <Form.Control value={this.state.alumno.curp} onChange={async (event: any) => await this.handleInputChange(event)} name=\"curp\" type=\"text\" placeholder=\"CURP\" />\n                            <ErrorMessage errors={this.state.errors} name=\"curp\" />\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicCurp\">\n                            <Form.Label>Aula</Form.Label>\n                            <Form.Text>\n                                <select key={this.state.alumno.idAlumno} name=\"aula\" className=\"form-select\" defaultValue={this.state.alumno.aula} onChange={(e: any) => this.handleInputChange(e)}>\n                                    {\n                                        this.state.aulas.map((aula) => {\n                                            return (\n                                                <option key={aula.idAula} selected={aula.idAula === this.state.alumno.aula} defaultValue={this.state.alumno.aula} value={aula.idAula}>{aula.nombre}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </Form.Text>\n                            <ErrorMessage errors={this.state.errors} name=\"aula\" />\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicCurp\">\n                            <Form.Label>Tutores</Form.Label>\n                            <MultiSelect options={this.state.remaining} onChange={this.setSelected} labelledBy=\"Select\" value={this.state.selected} />\n                            <Form.Text>\n                                <Table>\n                                    <thead>\n                                        <tr>\n                                            <th>Nombre</th>\n                                            <th>Eliminar</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            this.state.selected.map((tutor) => {\n                                                return (\n                                                    <tr>\n                                                        <td>{tutor.value.nombres} {tutor.value.apellidoPaterno} {tutor.value.apellidoMaterno}</td>\n                                                        <td><Button variant=\"danger\" onClick={() => this.removeTutor(tutor.value.idTutor)}>Eliminar</Button></td>\n                                                    </tr>\n                                                )\n                                            })\n                                        }\n                                    </tbody>\n                                </Table>\n                            </Form.Text>\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Row>\n                            <Col>\n                                {\n                                    this.state.alumno.activo\n                                        ? <Button className=\"btn-block\" variant=\"danger\" onClick={this.confirmDeactivation}>Desactivar</Button>\n                                        : <Button className=\"btn-block\" variant=\"danger\" onClick={this.confirmReactivation}>Reactivar</Button>\n                                }\n                            </Col>\n                            <Col>\n                                <Button className=\"btn-block\" variant=\"primary\" onClick={this.saveAlumno}>Guardar</Button>\n                            </Col>\n                        </Row>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default Edit;","import { alumnoSchema, IAlumno } from \"../../../../../models/Alumno\";\nimport React, { Component } from 'react';\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\nimport { setKeyValue } from \"../../../../../models/Functions\";\nimport { IAula } from \"../../../../../models/Aula\";\nimport { validate } from \"../../../../../utils/ValidationManager\";\nimport { send, RequestType } from \"../../../../../utils/RequestManager\";\nimport Swal from \"sweetalert2\";\nimport { ZodIssue } from \"zod\";\nimport ErrorMessage from \"../../Error/ErrorMessage\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport { Option } from \"react-multi-select-component/dist/types/lib/interfaces\";\nimport { ITutor } from \"../../../../../models/Tutor\";\nimport { ITutorAlumno } from \"../../../../../models/TutorAlumno\";\n\nexport interface Props {\n    show: boolean,\n    handleClose: () => void\n}\n\nexport interface State {\n    alumno: IAlumno,\n    aulas: IAula[],\n    tutores: Option[],\n    errors: Array<ZodIssue>,\n    selected: Array<Option>\n}\n\nclass Add extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            alumno: {\n                idAlumno: 0,\n                nombres: \"\",\n                apellidoMaterno: \"\",\n                apellidoPaterno: \"\",\n                curp: \"\",\n                aula: 0,\n                activo: true\n            } as IAlumno,\n            aulas: [],\n            tutores: [],\n            errors: [],\n            selected: []\n        }\n        this.saveAlumno = this.saveAlumno.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.setSelected = this.setSelected.bind(this);\n    }\n\n    async componentDidMount() {\n        this.setState({\n            aulas: await send<IAula[]>(RequestType.GET, \"Aula\")\n        })\n        let tutores = await send<ITutor[]>(RequestType.GET, \"Tutor\");\n        this.setState({\n            tutores: tutores.map(tutor => {\n                return {\n                    label: tutor.nombres + \" \" + tutor.apellidoPaterno + \" \" + tutor.apellidoMaterno,\n                    value: tutor\n                }\n            })\n        })\n    }\n\n    async setSelected(selected: Array<Option>) {\n        this.setState({ selected })\n    }\n\n    async handleInputChange(event: React.FormEvent<HTMLInputElement>) {\n        let alumno = setKeyValue(this.state.alumno, event.currentTarget.name as keyof IAlumno, event.currentTarget.value);\n        this.setState({\n            errors: await validate(event.currentTarget.name, alumno, alumnoSchema)\n        })\n        this.setState({ alumno })\n    }\n\n    async saveAlumno() {\n        if (this.state.errors.length === 0) {\n            let postedAlumno = await send<IAlumno>(RequestType.POST, \"Alumno\", this.state.alumno, null, \"\", this.props.handleClose)\n            for (const tutorAlumno of this.state.selected.map(tutor => { return { idTutor: tutor.value.idTutor, idAlumno: postedAlumno.idAlumno } as ITutorAlumno })) {\n                await send<ITutorAlumno>(RequestType.POST, \"AlumnoTutor\", tutorAlumno, null, \"\", this.props.handleClose, true);\n            }\n        } else {\n            await Swal.fire({\n                title: 'Error',\n                text: 'Revise los campos en rojo',\n                icon: 'error',\n                confirmButtonText: 'Ok'\n            })\n        }\n\n    }\n\n    render() {\n        return (\n            <>\n                <Modal show={this.props.show} onHide={this.props.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Agregar</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group controlId=\"formBasicName\">\n                            <Form.Label>Nombres</Form.Label>\n                            <Form.Control required value={this.state.alumno.nombres} onChange={async (event: any) => await this.handleInputChange(event)} name=\"nombres\" type=\"text\" placeholder=\"Nombres\" />\n                            <ErrorMessage errors={this.state.errors} name=\"nombres\" />\n                        </Form.Group>\n                        <Row>\n                            <Col sm=\"12\" md=\"12\" lg=\"6\"><Form.Group controlId=\"formBasicLastName\">\n                                <Form.Label>Apellido paterno</Form.Label>\n                                <Form.Control required value={this.state.alumno.apellidoPaterno} onChange={async (event: any) => await this.handleInputChange(event)} name=\"apellidoPaterno\" type=\"text\" placeholder=\"Apellido paterno\" />\n                                <ErrorMessage errors={this.state.errors} name=\"apellidoPaterno\" />\n                            </Form.Group></Col>\n                            <Col sm=\"12\" md=\"12\" lg=\"6\">\n                                <Form.Group controlId=\"formBasicSecondLastName\">\n                                    <Form.Label>Apellido materno</Form.Label>\n                                    <Form.Control required value={this.state.alumno.apellidoMaterno} onChange={async (event: any) => await this.handleInputChange(event)} name=\"apellidoMaterno\" type=\"text\" placeholder=\"Apellido materno\" />\n                                    <ErrorMessage errors={this.state.errors} name=\"apellidoMaterno\" />\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Form.Group controlId=\"formBasicCurp\">\n                            <Form.Label>CURP</Form.Label>\n                            <Form.Control required value={this.state.alumno.curp} onChange={async (event: any) => await this.handleInputChange(event)} name=\"curp\" type=\"text\" placeholder=\"CURP\" />\n                            <ErrorMessage errors={this.state.errors} name=\"curp\" />\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicTutors\">\n                            <Form.Label>Tutores</Form.Label>\n                            <MultiSelect options={this.state.tutores} onChange={this.setSelected} labelledBy=\"Select\" value={this.state.selected} />\n                            <Form.Text>\n                                {\n                                    this.state.selected.map((tutor) => {\n                                        return (\n                                            <div key={tutor.value.idTutor}>\n                                                <label>{tutor.value.nombres} {tutor.value.apellidoPaterno} {tutor.value.apellidoMaterno}</label>\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </Form.Text>\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicAula\">\n                            <Form.Label>Aula</Form.Label>\n                            <Form.Text>\n                                <select required key={this.state.alumno.idAlumno} name=\"aula\" className=\"form-select\" defaultValue={this.state.alumno.aula} onChange={(e: any) => this.handleInputChange(e)}>\n                                    <option selected value=\"0\">Seleccione un aula</option>\n                                    {\n                                        this.state.aulas.map((aula) => {\n                                            return (\n                                                <option key={aula.idAula} selected={aula.idAula === this.state.alumno.aula} defaultValue={this.state.alumno.aula} value={aula.idAula}>{aula.nombre}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </Form.Text>\n                            <ErrorMessage errors={this.state.errors} name=\"aula\" />\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Row>\n                            <Col>\n                                <Button className=\"btn-block\" variant=\"primary\" type=\"submit\" onClick={this.saveAlumno}>Guardar</Button>\n                            </Col>\n                        </Row>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default Add;\n\n","import React, { Component } from 'react'\nimport { Row } from 'react-bootstrap';\n\nexport default class Spinning extends Component {\n    render() {\n        return (\n            <Row className=\"center\"><div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div></Row>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport { Card, Button, Col, Row, Table, Pagination } from \"react-bootstrap\";\nimport {send, RequestType} from \"../../../../utils/RequestManager\";\nimport { IAlumno } from '../../../../models/Alumno';\nimport Edit from './Modals/Edit';\nimport Add from './Modals/Add';\nimport \"./Alumnos.css\"\nimport { FaEdit, FaUser } from \"react-icons/fa\";\nimport Spinning from \"../../../Layout/Navigation/Spinning/Spinning\";\nimport { ILoading, IPagination } from \"../../../../App\";\n\nexport interface Props {\n\n}\n\nexport interface State extends ILoading, IPagination {\n    alumnos: IAlumno[],\n    alumno: IAlumno,\n    showEdit: boolean,\n    showAdd: boolean,\n}\n\nclass Alumnos extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            alumnos: [],\n            alumno: {} as IAlumno,\n            totalPaginas: 0,\n            paginaActual: 0,\n            showEdit: false,\n            showAdd: false,\n            loading: true\n        }\n        this.handleShow = this.handleShow.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.changePage = this.changePage.bind(this);\n    }\n\n    changePage(index: number) {\n        this.setState({ paginaActual: index })\n    }\n\n    handleShow(alumno?: IAlumno) {\n        if (typeof alumno === 'undefined') {\n            this.setState({ showAdd: true })\n        }\n        else {\n            this.setState({ alumno })\n            this.setState({ showEdit: true })\n        }\n    }\n\n    async handleClose() {\n        this.setState({ showEdit: false })\n        this.setState({ showAdd: false })\n        await this.updateState();\n    }\n\n    async updateState() {\n        this.setState({ alumnos: await send<IAlumno[]>(RequestType.GET, \"Alumno\") })\n    }\n\n    async componentDidMount() {\n        this.setState(\n            { \n                alumnos: await send<IAlumno[]>(RequestType.GET, \"Alumno\")\n                    .finally(() => this.setState({ loading: false })) \n            });\n        this.setState({ totalPaginas: Math.ceil(this.state.alumnos.length / 6) })\n    }\n\n    render() {\n        const items = [];\n        const { startIndex, endIndex } = (this.state.paginaActual === 0)\n            ? { startIndex: 0, endIndex: 6 }\n            : { startIndex: this.state.paginaActual * 6, endIndex: this.state.paginaActual * 6 + 6 };\n        for (let i = 0; i < this.state.totalPaginas; i++) {\n            items.push(<Pagination.Item key={i} active={i === this.state.paginaActual} onClick={() => this.changePage(i)}>{i + 1}</Pagination.Item>);\n        }\n        if (this.state.loading) {\n            return (\n                <Spinning />\n            )\n        }\n        return (\n            <Card>\n                <Card.Header as=\"h5\">\n                    <Row>\n                        <Col>\n                            Pagina {this.state.paginaActual + 1}\n                        </Col>\n                        <Col style={{ textAlign: \"center\" }}>\n                            Alumnos\n                        </Col>\n                        <Col>\n                            <Button className=\"headerButton btn-sm\" variant=\"warning\" onClick={() => this.handleShow()}>Agregar</Button>\n                        </Col>\n                    </Row>\n                </Card.Header>\n                {this.state.showAdd && <Add show={this.state.showAdd} handleClose={this.handleClose} />}\n                <Card.Body>\n                    {\n                        <div className=\"table-responsive\">\n                            <Table>\n                                <thead>\n                                    <tr>\n                                        <th></th>\n                                        <th>Alumno</th>\n                                        <th>Aula</th>\n                                        <th>Estatus</th>\n                                        <th>Acciones</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        this.state.alumnos.slice(startIndex, endIndex).map((alumno) => (\n                                            <tr key={alumno.idAlumno}>\n                                                <td><FaUser></FaUser></td>\n                                                <td>{alumno.nombres} {alumno.apellidoPaterno} {alumno.apellidoMaterno}</td>\n                                                <td>{alumno.aulaNavigation?.nombre}</td>\n                                                <td>{alumno.activo ? \"Activo\" : \"Inactivo\"}</td>\n                                                <td>\n                                                    <Button className=\"btn-block\" variant=\"warning\" onClick={() => this.handleShow(alumno)}><FaEdit /></Button>\n                                                </td>\n                                            </tr>\n                                        ))\n                                    }\n                                </tbody>\n                                {this.state.showEdit && <Edit show={this.state.showEdit} alumno={this.state.alumno} handleClose={this.handleClose} />}\n                            </Table>\n                        </div>\n                    }\n                </Card.Body>\n                <Card.Footer >\n                    <Pagination className=\"center red\" size=\"lg\">\n                        {items}\n                    </Pagination>\n                </Card.Footer>\n            </Card >\n        )\n    }\n}\n\nexport default Alumnos;","import { z } from \"zod\";\nimport {email, id, text, phone, numeric} from \"./Schema\";\n\nconst tutorSchema = z.object({\n  idTutor: id,\n  nombres: text,\n  apellidoPaterno: text,\n  apellidoMaterno: text,\n  numeroCelular: phone,\n  email: email,\n  calle: text,\n  numero: numeric,\n  colonia: text,\n  localidad: text,\n  estado: text,\n  pais: text,\n  cp: numeric,\n  activo: z.boolean().optional().default(true),\n});\n\ntype ITutor = z.TypeOf<typeof tutorSchema>;\n\nexport type { ITutor };\n\nexport { tutorSchema }","import React, {Component} from 'react';\nimport {Button, Col, Form, Modal, Row} from \"react-bootstrap\";\nimport {IAula} from \"../../../../../models/Aula\";\nimport {ITutor, tutorSchema} from \"../../../../../models/Tutor\";\nimport {setKeyValue} from \"../../../../../models/Functions\";\nimport {validate} from \"../../../../../utils/ValidationManager\";\nimport { RequestType, send } from \"../../../../../utils/RequestManager\";\nimport {ZodIssue} from \"zod\";\nimport ErrorMessage from \"../../Error/ErrorMessage\";\nimport Swal from \"sweetalert2\";\n\nexport interface Props {\n    show: boolean,\n    tutor: ITutor,\n    handleClose: () => void\n}\n\nexport interface State {\n    tutor: ITutor,\n    aulas: IAula[],\n    errors: Array<ZodIssue>,\n}\n\nclass Edit extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            tutor: this.props.tutor,\n            aulas: [],\n            errors: []\n        }\n        this.saveTutor = this.saveTutor.bind(this);\n        this.confirmDeactivation = this.confirmDeactivation.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    async handleInputChange(event: React.FormEvent<HTMLInputElement>) {\n        let tutor = setKeyValue(this.state.tutor, event.currentTarget.name as keyof ITutor, event.currentTarget.value);\n        this.setState({\n            errors: await validate(event.currentTarget.name, tutor, tutorSchema)\n        })\n        this.setState({ tutor })\n    }\n\n    async saveTutor() {\n        if (this.state.errors.length === 0) {\n            await send(RequestType.PUT, \"Tutor\", this.state.tutor, this.state.tutor.idTutor, \"\", this.props.handleClose);\n        } else {\n            await Swal.fire({\n                title: 'Error',\n                text: 'Revise los campos en rojo',\n                icon: 'error',\n                confirmButtonText: 'Ok'\n            })\n        }\n    }\n\n    async confirmDeactivation() {\n        let result = await Swal.fire({\n            title: \"Esta segura?\",\n            text: \"Se desactivara, es posible volver a reactivar.\",\n            icon: \"warning\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: \"Desactivar\",\n            cancelButtonText: \"Cancelar\",\n        });\n        if (result.isConfirmed) {\n            await send(RequestType.DELETE, \"Tutor\", null, this.state.tutor.idTutor, \"\", this.props.handleClose);\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Modal show={this.props.show} onHide={this.props.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Editar</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group controlId=\"formBasicName\">\n                            <Form.Label>Nombres</Form.Label>\n                            <Form.Control required value={this.state.tutor.nombres} onChange={async (event: any) => await this.handleInputChange(event)} name=\"nombres\" type=\"text\" placeholder=\"Nombres\" />\n                            <ErrorMessage errors={this.state.errors} name=\"nombres\"/>\n                        </Form.Group>\n                        <Row>\n                            <Col sm=\"12\" md=\"12\" lg=\"6\">\n                                <Form.Group controlId=\"formBasicLastName\">\n                                    <Form.Label>Apellido paterno</Form.Label>\n                                    <Form.Control required value={this.state.tutor.apellidoPaterno} onChange={async (event: any) => await this.handleInputChange(event)} name=\"apellidoPaterno\" type=\"text\" placeholder=\"Apellido paterno\" />\n                                    <ErrorMessage errors={this.state.errors} name=\"apellidoPaterno\"/>\n                                </Form.Group>\n                            </Col>\n                            <Col sm=\"12\" md=\"12\" lg=\"6\">\n                                <Form.Group controlId=\"formBasicSecondLastName\">\n                                    <Form.Label>Apellido materno</Form.Label>\n                                    <Form.Control required value={this.state.tutor.apellidoMaterno} onChange={async (event: any) => await this.handleInputChange(event)} name=\"apellidoMaterno\" type=\"text\" placeholder=\"Apellido materno\" />                                    <ErrorMessage errors={this.state.errors} name=\"apellidoPaterno\"/>\n                                    <ErrorMessage errors={this.state.errors} name=\"apellidoMaterno\"/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Form.Group controlId=\"formBasicNumeroCelular\">\n                            <Form.Label>Numero celular</Form.Label>\n                            <Form.Control type=\"text\" required value={this.state.tutor.numeroCelular} onChange={async (event: any) => await this.handleInputChange(event)} name=\"numeroCelular\" placeholder=\"Numero celular\" />\n                            <ErrorMessage errors={this.state.errors} name=\"numeroCelular\"/>\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control required value={this.state.tutor.email} onChange={async (event: any) => await this.handleInputChange(event)} name=\"email\" type=\"text\" placeholder=\"Email\" />\n                            <ErrorMessage errors={this.state.errors} name=\"email\"/>\n                        </Form.Group>\n                        <Row>\n                            <Col>\n                                <Form.Group controlId=\"formBasicCalle\">\n                                    <Form.Label>Calle</Form.Label>\n                                    <Form.Control type=\"text\" required value={this.state.tutor.calle} onChange={async (event: any) => await this.handleInputChange(event)} name=\"calle\" placeholder=\"Calle\" />\n                                    <ErrorMessage errors={this.state.errors} name=\"calle\"/>\n                                </Form.Group>\n                            </Col>\n\n                        </Row>\n                        <Row>\n                            <Col sm=\"12\" md=\"12\" lg=\"4\">\n                                <Form.Group controlId=\"formBasicNumero\">\n                                    <Form.Label>Numero</Form.Label>\n                                    <Form.Control type=\"text\" required value={this.state.tutor.numero} onChange={async (event: any) => await this.handleInputChange(event)} name=\"numero\" placeholder=\"Numero\" />\n                                    <ErrorMessage errors={this.state.errors} name=\"numero\"/>\n                                </Form.Group>\n                            </Col>\n                            <Col sm=\"12\" md=\"12\" lg=\"8\">\n                                <Form.Group controlId=\"formBasicCP\">\n                                    <Form.Label>Codigo Postal</Form.Label>\n                                    <Form.Control type=\"text\" required value={this.state.tutor.cp} onChange={async (event: any) => await this.handleInputChange(event)} name=\"cp\" placeholder=\"Codigo Postal\" />\n                                    <ErrorMessage errors={this.state.errors} name=\"cp\"/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"12\" md=\"12\" lg=\"6\">\n                                <Form.Group controlId=\"formBasicLastName\">\n                                    <Form.Label>Colonia</Form.Label>\n                                    <Form.Control type=\"text\" required value={this.state.tutor.colonia} onChange={async (event: any) => await this.handleInputChange(event)} name=\"colonia\" placeholder=\"Colonia\" />\n                                    <ErrorMessage errors={this.state.errors} name=\"colonia\"/>\n                                </Form.Group>\n                            </Col>\n                            <Col sm=\"12\" md=\"12\" lg=\"6\">\n                                <Form.Group controlId=\"formBasicSecondLastName\">\n                                    <Form.Label>Localidad</Form.Label>\n                                    <Form.Control type=\"text\" required value={this.state.tutor.localidad} onChange={async (event: any) => await this.handleInputChange(event)} name=\"localidad\" placeholder=\"Localidad\" />\n                                    <ErrorMessage errors={this.state.errors} name=\"localidad\"/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"12\" md=\"12\" lg=\"6\">\n                                <Form.Group controlId=\"formBasicLastName\">\n                                    <Form.Label>Estado</Form.Label>\n                                    <Form.Control type=\"text\" required value={this.state.tutor.estado} onChange={async (event: any) => await this.handleInputChange(event)} name=\"estado\" placeholder=\"Estado\" />\n                                    <ErrorMessage errors={this.state.errors} name=\"estado\"/>\n                                </Form.Group>\n                            </Col>\n                            <Col sm=\"12\" md=\"12\" lg=\"6\">\n                                <Form.Group controlId=\"formBasicSecondLastName\">\n                                    <Form.Label>Pais</Form.Label>\n                                    <Form.Control type=\"text\" required value={this.state.tutor.pais} onChange={async (event: any) => await this.handleInputChange(event)} name=\"pais\" placeholder=\"Pais\" />\n                                    <ErrorMessage errors={this.state.errors} name=\"pais\"/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Row>\n                            <Col>\n                                <Button className=\"btn-block\" variant=\"danger\" onClick={async () => await this.confirmDeactivation()}>Desactivar</Button>\n                            </Col>\n                            <Col>\n                                <Button className=\"btn-block\" variant=\"primary\" onClick={this.saveTutor}>Guardar</Button>\n                            </Col>\n                        </Row>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default Edit;","import React, {Component} from 'react';\nimport {Button, Col, Form, Modal, Row} from \"react-bootstrap\";\nimport {RequestType, send} from \"../../../../../utils/RequestManager\";\nimport {validate} from \"../../../../../utils/ValidationManager\";\nimport {setKeyValue} from \"../../../../../models/Functions\";\nimport {ITutor, tutorSchema} from \"../../../../../models/Tutor\";\nimport {ZodIssue} from \"zod\";\nimport Swal from \"sweetalert2\";\nimport ErrorMessage from \"../../Error/ErrorMessage\";\n\nexport interface Props {\n    show: boolean,\n    handleClose: () => void\n}\n\nexport interface State {\n    tutor: ITutor,\n    errors: Array<ZodIssue>,\n}\n\nclass Add extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            tutor: {\n                idTutor: 0,\n                nombres: \"\",\n                apellidoPaterno: \"\",\n                apellidoMaterno: \"\",\n                numeroCelular: \"\",\n                email: \"\",\n                calle: \"\",\n                numero: 0,\n                colonia: \"\",\n                localidad: \"\",\n                estado: \"\",\n                pais: \"\",\n                cp: 0,\n                activo: true,\n            } as ITutor,\n            errors: []\n        }\n        this.saveTutor = this.saveTutor.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    async handleInputChange(event: React.FormEvent<HTMLInputElement>) {\n        let tutor = setKeyValue(this.state.tutor, event.currentTarget.name as keyof ITutor, event.currentTarget.value);\n        this.setState({\n            errors: await validate(event.currentTarget.name, tutor, tutorSchema)\n        })\n        this.setState({ tutor })\n    }\n\n    async saveTutor() {\n        if (this.state.errors.length === 0) {\n            await send(RequestType.POST, \"Tutor\", this.state.tutor, null, \"\", this.props.handleClose);\n        } else {\n            await Swal.fire({\n                title: 'Error',\n                text: 'Revise los campos en rojo',\n                icon: 'error',\n                confirmButtonText: 'Ok'\n            })\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Modal show={this.props.show} onHide={this.props.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Agregar</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group controlId=\"formBasicName\">\n                            <Form.Label>Nombres</Form.Label>\n                            <Form.Control required value={this.state.tutor.nombres} onChange={async (event: any) => await this.handleInputChange(event)} name=\"nombres\" type=\"text\" placeholder=\"Nombres\" />\n                            <ErrorMessage errors={this.state.errors} name=\"nombres\"/>\n                        </Form.Group>\n                        <Row>\n                            <Col sm=\"12\" md=\"12\" lg=\"6\">\n                                <Form.Group controlId=\"formBasicLastName\">\n                                    <Form.Label>Apellido paterno</Form.Label>\n                                    <Form.Control required value={this.state.tutor.apellidoPaterno} onChange={async (event: any) => await this.handleInputChange(event)} name=\"apellidoPaterno\" type=\"text\" placeholder=\"Apellido paterno\" />\n                                    <ErrorMessage errors={this.state.errors} name=\"apellidoPaterno\"/>\n                                </Form.Group>\n                            </Col>\n                            <Col sm=\"12\" md=\"12\" lg=\"6\">\n                                <Form.Group controlId=\"formBasicSecondLastName\">\n                                    <Form.Label>Apellido materno</Form.Label>\n                                    <Form.Control required value={this.state.tutor.apellidoMaterno} onChange={async (event: any) => await this.handleInputChange(event)} name=\"apellidoMaterno\" type=\"text\" placeholder=\"Apellido materno\" />                                    <ErrorMessage errors={this.state.errors} name=\"apellidoPaterno\"/>\n                                    <ErrorMessage errors={this.state.errors} name=\"apellidoMaterno\"/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Form.Group controlId=\"formBasicNumeroCelular\">\n                            <Form.Label>Numero celular</Form.Label>\n                            <Form.Control type=\"text\" required value={this.state.tutor.numeroCelular} onChange={async (event: any) => await this.handleInputChange(event)} name=\"numeroCelular\" placeholder=\"Numero celular\" />\n                            <ErrorMessage errors={this.state.errors} name=\"numeroCelular\"/>\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control required value={this.state.tutor.email} onChange={async (event: any) => await this.handleInputChange(event)} name=\"email\" type=\"text\" placeholder=\"Email\" />\n                            <ErrorMessage errors={this.state.errors} name=\"email\"/>\n                        </Form.Group>\n                        <Row>\n                            <Col>\n                                <Form.Group controlId=\"formBasicCalle\">\n                                    <Form.Label>Calle</Form.Label>\n                                    <Form.Control type=\"text\" required value={this.state.tutor.calle} onChange={async (event: any) => await this.handleInputChange(event)} name=\"calle\" placeholder=\"Calle\" />\n                                    <ErrorMessage errors={this.state.errors} name=\"calle\"/>\n                                </Form.Group>\n                            </Col>\n                            \n                        </Row>\n                        <Row>\n                            <Col sm=\"12\" md=\"12\" lg=\"4\">\n                                <Form.Group controlId=\"formBasicNumero\">\n                                    <Form.Label>Numero</Form.Label>\n                                    <Form.Control type=\"number\" required value={this.state.tutor.numero} onChange={async (event: any) => await this.handleInputChange(event)} name=\"numero\" placeholder=\"Numero\" />\n                                    <ErrorMessage errors={this.state.errors} name=\"numero\"/>\n                                </Form.Group>\n                            </Col>\n                            <Col sm=\"12\" md=\"12\" lg=\"8\">\n                                <Form.Group controlId=\"formBasicCP\">\n                                    <Form.Label>Codigo Postal</Form.Label>\n                                    <Form.Control type=\"number\" required value={this.state.tutor.cp} onChange={async (event: any) => await this.handleInputChange(event)} name=\"cp\" placeholder=\"Codigo Postal\" />\n                                    <ErrorMessage errors={this.state.errors} name=\"cp\"/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"12\" md=\"12\" lg=\"6\">\n                                <Form.Group controlId=\"formBasicLastName\">\n                                    <Form.Label>Colonia</Form.Label>\n                                    <Form.Control type=\"text\" required value={this.state.tutor.colonia} onChange={async (event: any) => await this.handleInputChange(event)} name=\"colonia\" placeholder=\"Colonia\" />\n                                    <ErrorMessage errors={this.state.errors} name=\"colonia\"/>\n                                </Form.Group>\n                            </Col>\n                            <Col sm=\"12\" md=\"12\" lg=\"6\">\n                                <Form.Group controlId=\"formBasicSecondLastName\">\n                                    <Form.Label>Localidad</Form.Label>\n                                    <Form.Control type=\"text\" required value={this.state.tutor.localidad} onChange={async (event: any) => await this.handleInputChange(event)} name=\"localidad\" placeholder=\"Localidad\" />\n                                    <ErrorMessage errors={this.state.errors} name=\"localidad\"/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"12\" md=\"12\" lg=\"6\">\n                                <Form.Group controlId=\"formBasicLastName\">\n                                    <Form.Label>Estado</Form.Label>\n                                    <Form.Control type=\"text\" required value={this.state.tutor.estado} onChange={async (event: any) => await this.handleInputChange(event)} name=\"estado\" placeholder=\"Estado\" />\n                                    <ErrorMessage errors={this.state.errors} name=\"estado\"/>\n                                </Form.Group>\n                            </Col>\n                            <Col sm=\"12\" md=\"12\" lg=\"6\">\n                                <Form.Group controlId=\"formBasicSecondLastName\">\n                                    <Form.Label>Pais</Form.Label>\n                                    <Form.Control type=\"text\" required value={this.state.tutor.pais} onChange={async (event: any) => await this.handleInputChange(event)} name=\"pais\" placeholder=\"Pais\" />\n                                    <ErrorMessage errors={this.state.errors} name=\"pais\"/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Row>\n                            <Col>\n                                <Button className=\"btn-block\" variant=\"primary\" type=\"submit\" onClick={this.saveTutor}>Guardar</Button>\n                            </Col>\n                        </Row>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default Add;\n\n","import React, { Component } from \"react\";\nimport { Card, Button, Col, Row, Table, Pagination } from \"react-bootstrap\";\nimport { ITutor } from '../../../../models/Tutor';\nimport Edit from './Modals/Edit';\nimport Add from './Modals/Add';\nimport \"./Tutores.css\"\nimport { FaEdit, FaUser } from \"react-icons/fa\";\nimport Spinning from \"../../../Layout/Navigation/Spinning/Spinning\";\nimport { ILoading, IPagination } from \"../../../../App\";\nimport {RequestType, send} from \"../../../../utils/RequestManager\";\n\nexport interface Props {\n\n}\n\nexport interface State extends ILoading, IPagination {\n    tutores: ITutor[],\n    tutor: ITutor,\n    showEdit: boolean,\n    showAdd: boolean,\n}\nclass Tutores extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            tutores: [],\n            tutor: {} as ITutor,\n            totalPaginas: 0,\n            paginaActual: 0,\n            showEdit: false,\n            showAdd: false,\n            loading: true\n        }\n        this.handleShow = this.handleShow.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.changePage = this.changePage.bind(this);\n    }\n\n    changePage(index: number) {\n        this.setState({ paginaActual: index })\n    }\n\n    handleShow(tutor?: ITutor) {\n        if (typeof tutor === 'undefined') {\n            this.setState({ showAdd: true })\n        }\n        else {\n            this.setState({ tutor })\n            this.setState({ showEdit: true })\n        }\n    }\n\n    handleClose() {\n        this.setState({ showEdit: false })\n        this.setState({ showAdd: false })\n        this.updateState();\n    }\n\n    async updateState() {\n        this.setState({ tutores: await send<ITutor[]>(RequestType.GET, \"Tutor\") })\n    }\n\n    async componentDidMount() {\n        this.setState({ tutores: await send<ITutor[]>(RequestType.GET, \"Tutor\").finally(() => this.setState({ loading: false })) });\n        this.setState({ totalPaginas: Math.ceil(this.state.tutores.length / 6) })\n    }\n\n    render() {\n        const items = [];\n        const { startIndex, endIndex } = (this.state.paginaActual === 0)\n            ? { startIndex: 0, endIndex: 6 }\n            : { startIndex: this.state.paginaActual * 6, endIndex: this.state.paginaActual * 6 + 6 };\n        for (let i = 0; i < this.state.totalPaginas; i++) {\n            items.push(<Pagination.Item key={i} active={i === this.state.paginaActual} onClick={() => this.changePage(i)}>{i + 1}</Pagination.Item>);\n        }\n        if (this.state.loading) {\n            return (\n                <Spinning />\n            )\n        }\n        return (\n            <Card>\n                <Card.Header as=\"h5\">\n                    <Row>\n                        <Col>\n                            Pagina {this.state.paginaActual + 1}\n                        </Col>\n                        <Col style={{ textAlign: \"center\" }}>\n                            Tutores\n                        </Col>\n                        <Col>\n                            <Button className=\"headerButton btn-sm\" variant=\"warning\" onClick={() => this.handleShow()}>Agregar</Button>\n                        </Col>\n                    </Row>\n                </Card.Header>\n                {this.state.showAdd && <Add show={this.state.showAdd} handleClose={this.handleClose} />}\n                <Card.Body>\n                    {\n                        <div className=\"table-responsive\">\n                            <Table>\n                                <thead>\n                                    <tr>\n                                        <th></th>\n                                        <th>Tutor</th>\n                                        <th>Estatus</th>\n                                        <th>Acciones</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        this.state.tutores.slice(startIndex, endIndex).map((tutor) => (\n                                            <tr key={tutor.idTutor}>\n                                                <td><FaUser></FaUser></td>\n                                                <td>{tutor.nombres} {tutor.apellidoPaterno} {tutor.apellidoMaterno}</td>\n                                                <td>{tutor.activo ? \"Activo\" : \"Inactivo\"}</td>\n                                                <td>\n                                                    <Button className=\"btn-block\" variant=\"warning\" onClick={() => this.handleShow(tutor)}><FaEdit /></Button>\n                                                </td>\n                                            </tr>\n                                        ))\n                                    }\n                                </tbody>\n                                {this.state.showEdit && <Edit show={this.state.showEdit} tutor={this.state.tutor} handleClose={this.handleClose} />}\n                            </Table>\n                        </div>\n                    }\n                </Card.Body>\n                <Card.Footer >\n                    <Pagination className=\"center red\" size=\"lg\">\n                        {items}\n                    </Pagination>\n                </Card.Footer>\n            </Card >\n        )\n    }\n}\n\nexport default Tutores;","import {aulaSchema} from \"./Aula\";\nimport { z } from \"zod\";\nimport {numeric, text, id } from \"./Schema\";\n\nconst docenteSchema = z.object({\n  idDocente: id,\n  nombres: text,\n  apellidoPaterno: text,\n  apellidoMaterno: text,\n  email: text,\n  password: text,\n  activo: z.boolean().optional().default(true),\n  administrador: z.boolean(),\n  aulaAsignada: numeric,\n  aulaAsignadaNavigation: aulaSchema.optional(),\n});\n\ntype IDocente = z.TypeOf<typeof docenteSchema>;\n\nexport type { IDocente };\nexport { docenteSchema };\n","import React, {Component} from 'react';\nimport {Button, Col, Form, Modal, Row} from \"react-bootstrap\";\nimport {RequestType, send} from \"../../../../../utils/RequestManager\";\nimport {docenteSchema, IDocente} from \"../../../../../models/Docente\";\nimport {setKeyValue} from \"../../../../../models/Functions\";\nimport {validate} from \"../../../../../utils/ValidationManager\";\nimport {IAula} from \"../../../../../models/Aula\";\nimport {ZodIssue} from \"zod\";\nimport Swal from \"sweetalert2\";\nimport ErrorMessage from \"../../Error/ErrorMessage\";\n\n\nexport interface Props {\n    show: boolean,\n    docente: IDocente,\n    handleClose: () => void\n}\n\nexport interface State {\n    docente: IDocente,\n    aulas: IAula[],\n    errors: Array<ZodIssue>,\n}\n\nclass Edit extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            docente: this.props.docente,\n            aulas: [],\n            errors: []\n        }\n        this.updateDocente = this.updateDocente.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    async componentDidMount() {\n        this.setState({\n            aulas: await send<IAula[]>(RequestType.GET, \"Aula\")\n        })\n    }\n\n    async handleInputChange(event: React.FormEvent<HTMLInputElement>) {\n        const name = event.currentTarget.name;\n        const value = event.currentTarget.value;\n        if (this.isAdminTryToKillItself(event))\n            return;\n        let isAulaTaken;\n        if (name === \"aulaAsignada\")\n            isAulaTaken = await send<boolean>(RequestType.GET, \"isAulaTaken\", null, value);\n        if (isAulaTaken) {\n            await Swal.fire({\n                title: \"Aula ocupada\",\n                text: \"La aula seleccionada está ocupada, por favor seleccione otra\",\n                icon: \"error\",\n                confirmButtonText: \"Ok\"\n            });\n            return;\n        }\n        let docente = setKeyValue(this.state.docente, name as keyof IDocente, value);\n        this.setState({\n            errors: await validate(name, docente, docenteSchema)\n        })\n        this.setState({ docente })\n    }\n    \n    isAdminTryToKillItself = (event: React.FormEvent<HTMLInputElement>) => {\n        const idDocente = (sessionStorage.getItem(\"idDocente\") != null) ? parseInt(sessionStorage.getItem(\"idDocente\") as string) : 0;\n        return sessionStorage.getItem(\"administrador\") === \"true\" && this.state.docente.idDocente === idDocente\n            && (event.currentTarget.name === \"activo\" || event.currentTarget.name === \"administrador\");\n    }\n    \n    async updateDocente() {\n        if (this.state.errors.length === 0) { \n            await send(RequestType.PUT, \"updateUser\", this.state.docente, this.state.docente.idDocente, \"\", this.props.handleClose);\n        } else {\n            await Swal.fire({\n                title: 'Error',\n                text: 'Revise los campos en rojo',\n                icon: 'error',\n                confirmButtonText: 'Ok'\n            })\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Modal show={this.props.show} onHide={this.props.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Editar</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group controlId=\"formBasicName\">\n                            <Form.Label>Nombres</Form.Label>\n                            <Form.Control value={this.state.docente.nombres} onChange={async (event: any) => await this.handleInputChange(event)} name=\"nombres\" type=\"text\" placeholder=\"Nombres\" />\n                            <ErrorMessage errors={this.state.errors} name=\"nombres\" />\n                        </Form.Group>\n                        <Row>\n                            <Col sm=\"12\" md=\"12\" lg=\"6\"><Form.Group controlId=\"formBasicLastName\">\n                                <Form.Label>Apellido paterno</Form.Label>\n                                <Form.Control value={this.state.docente.apellidoPaterno} onChange={async (event: any) => await this.handleInputChange(event)} name=\"apellidoPaterno\" type=\"text\" placeholder=\"Apellido paterno\" />\n                                <ErrorMessage errors={this.state.errors} name=\"apellidoPaterno\" />\n                            </Form.Group></Col>\n                            <Col sm=\"12\" md=\"12\" lg=\"6\"><Form.Group controlId=\"formBasicSecondLastName\">\n                                <Form.Label>Apellido materno</Form.Label>\n                                <Form.Control value={this.state.docente.apellidoMaterno} onChange={async (event: any) => await this.handleInputChange(event)} name=\"apellidoMaterno\" type=\"text\" placeholder=\"Apellido materno\" />\n                                <ErrorMessage errors={this.state.errors} name=\"apellidoMaterno\" />\n                            </Form.Group></Col>\n                        </Row>\n                        <Form.Group controlId=\"formBasicCurp\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control value={this.state.docente.email} onChange={async (event: any) => await this.handleInputChange(event)} name=\"email\" type=\"text\" placeholder=\"Email\" />\n                            <ErrorMessage errors={this.state.errors} name=\"email\" />\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicCurp\">\n                            <Form.Label>Contraseña</Form.Label>\n                            <Form.Control type=\"password\" required onChange={async (event: any) => await this.handleInputChange(event)} name=\"password\" placeholder=\"Contraseña\" />\n                            <ErrorMessage errors={this.state.errors} name=\"password\" />\n                        </Form.Group>\n                        <Row>\n                            <Col>\n                                <Form.Group controlId=\"formBasicCurp\">\n                                    <Form.Label>Activo</Form.Label><br/>\n                                    {\n                                        this.state.docente.activo\n                                            ? <Button variant=\"success\" name=\"activo\" value=\"false\" onClick={(e: any) => this.handleInputChange(e)}>Activo</Button>\n                                            : <Button variant=\"warning\" name=\"activo\" value=\"true\" onClick={(e: any) => this.handleInputChange(e)}>Inactivo</Button>\n                                    }\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group controlId=\"formBasicCurp\">\n                                    <Form.Label>Administrador</Form.Label><br/>\n                                    {\n                                        this.state.docente.administrador\n                                            ? <Button variant=\"success\" name=\"administrador\" value=\"false\" onClick={(e: any) => this.handleInputChange(e)}>Activo</Button>\n                                            : <Button variant=\"warning\" name=\"administrador\" value=\"true\" onClick={(e: any) => this.handleInputChange(e)}>Inactivo</Button>\n                                    }\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Form.Group controlId=\"formBasicCurp\">\n                                    <Form.Label>Aula</Form.Label>\n                                    <Form.Text>\n                                        <select required key={this.state.docente.idDocente} name=\"aulaAsignada\" className=\"form-select\" defaultValue={this.state.docente.aulaAsignada} onChange={(e: any) => this.handleInputChange(e)}>\n                                            <option selected value=\"0\">Seleccione un aula</option>\n                                            {\n                                                this.state.aulas.map((aula) => {\n                                                    return (\n                                                        <option key={aula.idAula} selected={aula.idAula === this.state.docente.aulaAsignada} defaultValue={this.state.docente.aulaAsignada} value={aula.idAula}>{aula.nombre}</option>\n                                                    )\n                                                })\n                                            }\n                                        </select>\n                                        <ErrorMessage errors={this.state.errors} name=\"aulaAsignada\" />\n                                    </Form.Text>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Row>\n                            <Col>\n                                <Button className=\"btn-block\" variant=\"primary\" onClick={this.updateDocente}>Guardar</Button>\n                            </Col>\n                        </Row>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default Edit;","import React, {Component} from 'react';\nimport {Button, Col, Form, Modal, Row} from \"react-bootstrap\";\nimport {setKeyValue} from \"../../../../../models/Functions\";\nimport {validate} from \"../../../../../utils/ValidationManager\";\nimport {docenteSchema, IDocente} from \"../../../../../models/Docente\";\nimport { RequestType, send} from '../../../../../utils/RequestManager';\nimport {IAula} from '../../../../../models/Aula';\nimport {ZodIssue} from \"zod\";\nimport ErrorMessage from \"../../Error/ErrorMessage\";\nimport Swal from 'sweetalert2';\n\n\nexport interface Props {\n    show: boolean,\n    handleClose: () => void\n}\n\nexport interface State {\n    docente: IDocente,\n    aulas: IAula[],\n    errors: Array<ZodIssue>,\n}\n\nclass Add extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            docente: {\n                idDocente: 0,\n                nombres: \"\",\n                apellidoMaterno: \"\",\n                apellidoPaterno: \"\",\n                email: \"\",\n                password: \"\",\n                activo: true,\n                administrador: false,\n                aulaAsignada: 0\n            } as IDocente,\n            aulas: [],\n            errors: []\n        }\n        this.saveDocente = this.saveDocente.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    async componentDidMount() {\n        this.setState({\n            aulas: await send<IAula[]>(RequestType.GET, \"Aula\")\n        })\n    }\n\n    async handleInputChange(event: React.FormEvent<HTMLInputElement>) {\n        let docente = setKeyValue(this.state.docente, event.currentTarget.name as keyof IDocente, event.currentTarget.value);\n        this.setState({\n            errors: await validate(event.currentTarget.name, docente, docenteSchema)\n        })\n        this.setState({ docente })\n    }\n\n    async saveDocente() {\n        if (this.state.errors.length === 0) {\n            await send(RequestType.POST, \"register\", this.state.docente, null, \"\", this.props.handleClose);\n        } else {\n            await Swal.fire({\n                title: \"Error\",\n                text: \"Revise los campos en rojo\",\n                icon: \"error\",\n                confirmButtonText: \"Ok\"\n            })\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Modal show={this.props.show} onHide={this.props.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Agregar</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group controlId=\"formBasicName\">\n                            <Form.Label>Nombres</Form.Label>\n                            <Form.Control required value={this.state.docente.nombres} onChange={async (event: any) => await this.handleInputChange(event)} name=\"nombres\" type=\"text\" placeholder=\"Nombres\" />\n                            <ErrorMessage errors={this.state.errors} name=\"nombres\" />\n                        </Form.Group>\n                        <Row>\n                            <Col sm=\"12\" md=\"12\" lg=\"6\"><Form.Group controlId=\"formBasicLastName\">\n                                <Form.Label>Apellido paterno</Form.Label>\n                                <Form.Control required value={this.state.docente.apellidoPaterno} onChange={async (event: any) => await this.handleInputChange(event)} name=\"apellidoPaterno\" type=\"text\" placeholder=\"Apellido paterno\" />\n                                <ErrorMessage errors={this.state.errors} name=\"apellidoPaterno\" />\n                            </Form.Group></Col>\n                            <Col sm=\"12\" md=\"12\" lg=\"6\"><Form.Group controlId=\"formBasicSecondLastName\">\n                                <Form.Label>Apellido materno</Form.Label>\n                                <Form.Control required value={this.state.docente.apellidoMaterno} onChange={async (event: any) => await this.handleInputChange(event)} name=\"apellidoMaterno\" type=\"text\" placeholder=\"Apellido materno\" />\n                                <ErrorMessage errors={this.state.errors} name=\"apellidoMaterno\" />\n                            </Form.Group></Col>\n                        </Row>\n                        <Form.Group controlId=\"formBasicCurp\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control required value={this.state.docente.email} onChange={async (event: any) => await this.handleInputChange(event)} name=\"email\" type=\"text\" placeholder=\"Email\" />\n                            <ErrorMessage errors={this.state.errors} name=\"email\" />\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicCurp\">\n                            <Form.Label>Contraseña</Form.Label>\n                            <Form.Control type=\"password\" required value={this.state.docente.password} onChange={async (event: any) => await this.handleInputChange(event)} name=\"password\" placeholder=\"Contraseña\" />\n                            <ErrorMessage errors={this.state.errors} name=\"password\" />\n                        </Form.Group>\n                        <Row>\n                            <Col>\n                                <Form.Group controlId=\"formBasicCurp\">\n                                    <Form.Label>Activo</Form.Label><br></br>\n                                    {\n                                        this.state.docente.activo\n                                            ? <Button variant=\"success\" name=\"activo\" value=\"false\" onClick={(e: any) => this.handleInputChange(e)}>Activo</Button>\n                                            : <Button variant=\"warning\" name=\"activo\" value=\"true\" onClick={(e: any) => this.handleInputChange(e)}>Inactivo</Button>\n                                    }\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group controlId=\"formBasicCurp\">\n                                    <Form.Label>Administrador</Form.Label><br></br>\n                                    {\n                                        this.state.docente.administrador\n                                            ? <Button variant=\"success\" name=\"administrador\" value=\"false\" onClick={(e: any) => this.handleInputChange(e)}>Activo</Button>\n                                            : <Button variant=\"warning\" name=\"administrador\" value=\"true\" onClick={(e: any) => this.handleInputChange(e)}>Inactivo</Button>\n                                    }\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Form.Group controlId=\"formBasicCurp\">\n                            <Form.Label>Aula</Form.Label>\n                            <Form.Text>\n                                <select required key={this.state.docente.idDocente} name=\"aulaAsignada\" className=\"form-select\" defaultValue={this.state.docente.aulaAsignada} onChange={(e: any) => this.handleInputChange(e)}>\n                                    <option selected value=\"0\">Seleccione un aula</option>\n                                    {\n                                        this.state.aulas.map((aula) => {\n                                            return (\n                                                <option key={aula.idAula} selected={aula.idAula === this.state.docente.aulaAsignada} defaultValue={this.state.docente.aulaAsignada} value={aula.idAula}>{aula.nombre}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                                <ErrorMessage errors={this.state.errors} name=\"aulaAsignada\" />\n                            </Form.Text>\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Row>\n                            <Col>\n                                <Button className=\"btn-block\" variant=\"primary\" type=\"submit\" onClick={this.saveDocente}>Guardar</Button>\n                            </Col>\n                        </Row>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default Add;\n\n","import React, { Component } from 'react'\nimport { Table, Modal } from 'react-bootstrap';\nimport { FaUser } from 'react-icons/fa';\nimport { IAlumno } from '../../../../../models/Alumno'\nimport { RequestType, send } from '../../../../../utils/RequestManager';\nimport Spinning from \"../../../../Layout/Navigation/Spinning/Spinning\";\n\nexport interface Props {\n    show: boolean,\n    idDocente: number,\n    handleClose: () => void\n}\n\nexport interface State {\n    alumnos: IAlumno[],\n}\n\nexport default class ListaAlumnos extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            alumnos: [],\n        }\n    }\n\n    async componentDidMount() {\n        this.setState({\n            alumnos: await send<IAlumno[]>(\n                RequestType.GET,\n                \"GetAlumnosAulaDocente\",\n                null,\n                this.props.idDocente,\n                \"?isAsistencia=false\"\n            )\n        })\n    }\n    render() {\n        return (\n            <>\n                <Modal show={this.props.show} onHide={this.props.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Lista de alumnos</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        {\n                            !this.state.alumnos.length ? <Spinning /> :\n                                <div>\n                                    <div className=\"table-responsive\">\n                                        <Table>\n                                            <thead>\n                                                <tr>\n                                                    <th></th>\n                                                    <th>Alumno</th>\n                                                    <th>Aula</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    this.state.alumnos.map((alumno) => (\n                                                        <tr key={alumno.idAlumno}>\n                                                            <td><FaUser></FaUser></td>\n                                                            <td>{alumno.nombres} {alumno.apellidoPaterno} {alumno.apellidoMaterno}</td>\n                                                            <td>{alumno.aulaNavigation?.nombre}</td>\n                                                        </tr>\n                                                    ))\n                                                }\n                                            </tbody>\n                                        </Table>\n                                    </div>\n                                </div>\n                        }\n                    </Modal.Body>\n                </Modal>\n            </>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport { Card, Button, Col, Row, Table, Pagination } from \"react-bootstrap\";\nimport {RequestType, send} from \"../../../../utils/RequestManager\";\nimport { IDocente } from '../../../../models/Docente';\nimport Edit from './Modals/Edit';\nimport Add from './Modals/Add';\nimport \"./Docentes.css\"\nimport { FaChalkboardTeacher, FaEdit, FaList } from 'react-icons/fa';\nimport ListaAlumnos from \"./Modals/ListaAlumnos\";\nimport { ILoading, IPagination } from \"../../../../App\";\nimport Spinning from \"../../../Layout/Navigation/Spinning/Spinning\";\n\nexport interface Props {\n\n}\n\nexport interface State extends ILoading, IPagination {\n    docentes: IDocente[],\n    docente: IDocente,\n    listId: number,\n    showEdit: boolean,\n    showList: boolean,\n    showAdd: boolean,\n}\n\nclass Docentes extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            docentes: [],\n            docente: {} as IDocente,\n            listId: 0,\n            totalPaginas: 0,\n            paginaActual: 0,\n            showEdit: false,\n            showList: false,\n            showAdd: false,\n            loading: true\n        }\n        this.handleShow = this.handleShow.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.changePage = this.changePage.bind(this);\n    }\n\n    changePage(index: number) {\n        this.setState({ paginaActual: index })\n    }\n\n    handleShow(docente?: any, id?: number) {\n        if (typeof docente === 'undefined') {\n            this.setState({ showAdd: true })\n        }\n        else if (docente === \"list\") {\n            if (typeof id !== 'undefined') {\n                this.setState({ listId: id })\n            }\n            this.setState({ showList: true })\n        }\n        else {\n            this.setState({ docente: docente })\n            this.setState({ showEdit: true })\n        }\n    }\n\n    handleClose() {\n        this.setState({ showEdit: false })\n        this.setState({ showList: false })\n        this.setState({ showAdd: false })\n        this.updateState();\n    }\n\n    async updateState() {\n        this.setState({ docentes: await send<IDocente[]>(RequestType.GET, \"Docente\") })\n    }\n\n    async componentDidMount() {\n        this.setState({ docentes: await send<IDocente[]>(RequestType.GET, \"Docente\").finally(() => this.setState({ loading: false })) })\n        this.setState({ totalPaginas: Math.ceil(this.state.docentes.length / 6) })\n    }\n\n    render() {\n        const items = [];\n        const { startIndex, endIndex } = (this.state.paginaActual === 0)\n            ? { startIndex: 0, endIndex: 6 }\n            : { startIndex: this.state.paginaActual * 6, endIndex: this.state.paginaActual * 6 + 6 };\n        for (let i = 0; i < this.state.totalPaginas; i++) {\n            items.push(<Pagination.Item key={i} active={i === this.state.paginaActual} onClick={() => this.changePage(i)}>{i + 1}</Pagination.Item>);\n        }\n        if (this.state.loading) { return (<Spinning />) }\n        return (\n            <Card>\n                <Card.Header as=\"h5\">\n                    <Row>\n                        <Col>\n                            Pagina {this.state.paginaActual + 1}\n                        </Col>\n                        <Col style={{ textAlign: \"center\" }}>\n                            Docentes\n                        </Col>\n                        <Col>\n                            <Button className=\"headerButton btn-sm\" variant=\"warning\" onClick={() => this.handleShow()}>Agregar</Button>\n                        </Col>\n                    </Row>\n                </Card.Header>\n                {this.state.showAdd && <Add show={this.state.showAdd} handleClose={this.handleClose} />}\n                <Card.Body>\n                    {\n                        <div className=\"table-responsive\">\n                            <Table>\n                                <thead>\n                                    <tr>\n                                        <th></th>\n                                        <th>ID</th>\n                                        <th>Docente</th>\n                                        <th>Estatus</th>\n                                        <th>Editar</th>\n                                        <th>Lista de alumnos</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        this.state.docentes.slice(startIndex, endIndex).map((docente) => (\n                                            <tr key={docente.idDocente}>\n                                                <td><FaChalkboardTeacher></FaChalkboardTeacher></td>\n                                                <td>{docente.idDocente}</td>\n                                                <td>{docente.nombres} {docente.apellidoPaterno} {docente.apellidoMaterno}</td>\n                                                <td>{docente.activo ? \"Activo\" : \"Inactivo\"}</td>\n                                                <td width=\"20%\">\n                                                    <Button className=\"btn-block\" variant=\"warning\" onClick={() => this.handleShow(docente)}><FaEdit /></Button>\n                                                </td>\n                                                <td width=\"20%\">\n                                                    <Button className=\"btn-block\" variant=\"info\" onClick={() => this.handleShow(\"list\", docente.idDocente)}><FaList /></Button>\n                                                </td>\n                                            </tr>\n                                        ))\n                                    }\n                                </tbody>\n                                {this.state.showEdit && <Edit show={this.state.showEdit} docente={this.state.docente} handleClose={this.handleClose} />}\n                                {this.state.showList && <ListaAlumnos idDocente={this.state.listId} show={this.state.showList} handleClose={this.handleClose} />}\n                            </Table>\n                        </div>\n                    }\n                </Card.Body>\n                <Card.Footer>\n                    <Pagination className=\"center red\" size=\"lg\">\n                        {items}\n                    </Pagination>\n                </Card.Footer>\n            </Card >\n        )\n    }\n}\n\nexport default Docentes;","import React, {Component} from 'react';\nimport {IAula} from \"../../../../../models/Aula\";\nimport {Button, Card, Col, Form, Row, Table} from \"react-bootstrap\";\nimport {RequestType, send} from \"../../../../../utils/RequestManager\";\nimport ErrorMessage from \"../../Error/ErrorMessage\";\nimport {ZodIssue} from \"zod\";\nimport {IAsistencia} from \"../../../../../models/Asistencia\";\n\ninterface Props {\n}\n\ninterface State {\n    fecha: Date,\n    aula: number,\n    aulas: Array<IAula>,\n    asistencia: Array<IAsistencia>\n    errors: Array<ZodIssue>,\n    loaded: boolean,\n}\n\nclass Registro extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            fecha: new Date(),\n            aula: 0,\n            aulas: [],\n            asistencia: [],\n            errors: [],\n            loaded: false,\n        };\n        this.queryRegistro = this.queryRegistro.bind(this);\n    }\n\n    async handleAula(event: React.FormEvent<HTMLInputElement>) {\n        const aula = parseInt(event.currentTarget.value);\n        this.setState({aula});\n    }\n\n    async handleFecha(event: React.FormEvent<HTMLInputElement>) {\n        this.setState({ fecha: new Date(event.currentTarget.value) })\n    }\n\n    async componentDidMount() {\n        const aulas = await send<IAula[]>(RequestType.GET, \"Aula\");\n        this.setState({\n            aulas,\n        });\n    }\n    \n    async queryRegistro() {\n        const { fecha, aula } = this.state;\n        const asistencia = await send<IAsistencia[]>(\n            RequestType.GET, \n            \"Asistencia\", \n            null, \n            `${fecha.toISOString().substring(0,10)}/${aula}`\n        );\n        this.setState({asistencia})\n        this.setState({loaded: true})\n        console.log(asistencia);\n    }\n    \n    render() {\n        return (\n            <div>\n                <Card>\n                    <Card.Header>\n                        <Row>\n                            <Col>\n                                <Card.Title>Registro de Asistencia</Card.Title>\n                            </Col>\n                            <Col>\n                                <Button className=\"headerButton\" onClick={this.queryRegistro}>Buscar</Button>\n                            </Col>\n                        </Row>\n                    </Card.Header>\n                    <Card.Body>\n                        <Row>\n                            <Col>\n                                <label>Periodo Inicial</label>\n                                <input className=\"form-control date-withicon\" type=\"date\" name=\"periodoInicial\" defaultValue={this.state.fecha.toString()} onChange={(event) => this.handleFecha(event)}/>\n                            </Col>\n                            <Col>\n                                <Form.Group controlId=\"formBasicCurp\">\n                                    <Form.Label>Aula</Form.Label>\n                                    <Form.Text>\n                                        <select required name=\"aula\" className=\"form-select\" onChange={(e: any) => this.handleAula(e)}>\n                                            <option selected value=\"0\">Seleccione un aula</option>\n                                            {\n                                                this.state.aulas.map((aula) => {\n                                                    return (\n                                                        <option key={aula.idAula} value={aula.idAula}>{aula.nombre}</option>\n                                                    )\n                                                })\n                                            }\n                                        </select>\n                                        <ErrorMessage errors={this.state.errors} name=\"aula\" />\n                                    </Form.Text>\n                                </Form.Group>\n                            </Col>\n                            \n                        </Row>\n                    </Card.Body>\n                    {this.state.asistencia.length > 0 \n                        ? \n                        <Card>\n                            <Table>\n                                <thead>\n                                    <tr>\n                                        <th>Nombre</th>\n                                        <th>Aula</th>\n                                        <th>Fecha</th>\n                                        <th>Asistio</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        this.state.asistencia.map((asistencia) => {\n                                            return (\n                                                <tr key={asistencia.idAsistencia}>\n                                                    <td>{asistencia.idAlumnoNavigation?.nombres} {asistencia.idAlumnoNavigation?.apellidoPaterno} {asistencia.idAlumnoNavigation?.apellidoMaterno}</td>\n                                                    <td>{asistencia.idAlumnoNavigation?.aulaNavigation?.nombre}</td>\n                                                    <td>{\n                                                        new Date(asistencia.fecha.toString()).toLocaleDateString(\"es-mx\", {\n                                                            weekday:\"long\",\n                                                            year:\"numeric\",\n                                                            month:\"short\",\n                                                            day:\"numeric\"}\n                                                        )\n                                                    }</td>\n                                                    <td>{asistencia.asistio ? \"Si\" : \"No\"}</td>\n                                                </tr>\n                                            )\n                                        })\n                                    }\n                                </tbody>\n                            </Table>\n                        </Card>\n                        : this.state.loaded ?\n                            <Card>\n                                <Card.Body>\n                                    <Card.Text>\n                                        No se encontraron registros\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                            : null\n                    }\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default Registro;","import React, { Component } from 'react';\nimport { IAlumno } from '../../../../../models/Alumno';\nimport \"./Lista.css\"\n\nexport interface Props {\n    alumno: IAlumno;\n    studentPresent: (idAlumno: number) => void;\n}\n\nexport class Student extends Component<Props> {\n    getStyle = () => {\n        let mode = localStorage.getItem(\"TYPE_OF_THEME\");\n        return {\n            backgroundColor: this.props.alumno.presente \n                ? '#49B66E' \n                : mode === \"light\" ? '#fff' : \"#0d1117\",\n            color: this.props.alumno.presente \n                ? mode === \"light\" ? '#fff' : \"#0d1117\" \n                : '#3b3b3b'\n        }\n    }\n\n    render() {\n        const { idAlumno, nombres, apellidoMaterno, apellidoPaterno } = this.props.alumno;\n        return (\n            <div style={this.getStyle()} className=\"contain\">\n                <table>\n                    <tr>\n                        <td className=\"\">{idAlumno}</td>\n                        <td className=\"nameCol\">{nombres} {apellidoPaterno} {apellidoMaterno}</td>\n                        <td className=\"nameCol\">{new Date().toLocaleDateString('es-mx', { \n                            weekday:\"long\", \n                            year:\"numeric\", \n                            month:\"short\", \n                            day:\"numeric\"}) }</td>\n                        <td className=\"switchCol\">\n                            {this.props.alumno.presente ? 'Presente ' : 'Ausente '}\n                            <label className=\"switch\">\n                                <input type=\"checkbox\" onChange={this.props.studentPresent.bind(this, idAlumno)} defaultChecked={this.props.alumno.presente} />\n                                <span className=\"slider round\"/>\n                            </label>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default Student;\n","import React, { Component } from 'react';\nimport { IAlumno } from '../../../../../models/Alumno';\nimport Student from './Student';\nimport \"./Lista.css\"\n\nexport interface Props {\n    alumnos: IAlumno[];\n    studentPresent: (idAlumno: number) => void;\n}\n\nclass Class extends Component<Props> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            alumnos: [],\n            studentPresent() { }\n        }\n    }\n    render() {\n        return this.props.alumnos.map((alumno) => (\n            <Student key={alumno.idAlumno} alumno={alumno} studentPresent={this.props.studentPresent} />\n        ));\n    }\n}\n\nexport default Class;","import React, { Component } from \"react\";\nimport {Button, Card, Col, Row} from \"react-bootstrap\";\nimport { IAlumno } from \"../../../../../models/Alumno\";\nimport { RequestType, send } from \"../../../../../utils/RequestManager\";\nimport { IAsistencia } from \"../../../../../models/Asistencia\";\nimport Spinning from \"../../../../Layout/Navigation/Spinning/Spinning\";\nimport { ILoading } from \"../../../../../App\";\nimport Class from \"./Class\";\nimport Asistencia from \"../../../../../img/alumnos.svg\";\nimport \"./Lista.css\"\n\nexport interface Props {\n\n}\n\nexport interface State extends ILoading {\n    alumnos: IAlumno[],\n    asistencia: IAsistencia[]\n}\n\nclass Lista extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            alumnos: [],\n            asistencia: [],\n            loading: true,\n        }\n        this.postAsistencia = this.postAsistencia.bind(this);\n    }\n\n    async postAsistencia() {\n        let asistencia = this.state.alumnos.map((alumno: IAlumno) => ({\n            idAsistencia: 0,\n            idAlumno: alumno.idAlumno,\n            asistio: (typeof alumno.presente === 'undefined') ? false : alumno.presente,\n            fecha: new Date(),\n        }));\n        await send(RequestType.POST, \"Asistencia\", asistencia)\n        this.setState({\n            alumnos: await send<IAlumno[]>(\n                RequestType.GET,\n                \"GetAlumnosAulaDocente\",\n                null,\n                sessionStorage.getItem(\"idDocente\"),\n                \"?isAsistencia=true\"\n            )\n        })\n        this.forceUpdate()\n    }\n\n    // Toggle present\n    studentPresent = (idAlumno: number) => {\n        this.setState({\n            alumnos: this.state.alumnos.map(alumno => {\n                if (alumno.idAlumno === idAlumno) {\n                    alumno.presente = !alumno.presente\n                }\n                return alumno;\n            })\n        });\n    }\n\n    async componentDidMount() {\n        this.setState({\n            alumnos: await send<IAlumno[]>(\n                RequestType.GET,\n                \"GetAlumnosAulaDocente\",\n                null,\n                sessionStorage.getItem(\"idDocente\"),\n                \"?isAsistencia=true\"\n            ).finally(() => this.setState({ loading: false }))\n        })\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (\n                <Spinning />\n            )\n        }\n        if (this.state.alumnos.length > 0) {\n            return (\n                <Card>\n                    <Card.Header as=\"h5\">\n                        <Row>\n                            <Col>\n                                Lista de asistencia\n                            </Col>\n                        </Row>\n                    </Card.Header>\n                    <Card.Body>\n                        <table>\n                            <tbody>\n                            <tr>\n                                <th className=\"\">ID</th>\n                                <th className=\"nameCol\">Nombre</th>\n                                <th className=\"nameCol\">Fecha</th>\n                                <th className=\"switchCol\">Asistencia</th>\n                            </tr>\n                            </tbody>\n                        </table>\n                        <Class alumnos={this.state.alumnos} studentPresent={this.studentPresent} />\n                    </Card.Body>\n                    <Card.Footer>\n                        <Row>\n                            <Col>\n                                <Button onClick={this.postAsistencia}>Guardar</Button>\n                            </Col>\n                        </Row>\n                    </Card.Footer>\n                </Card >\n            )\n        } else {\n            return (\n                <Card>\n                    <Card.Header as=\"h5\">\n                        <Row>\n                            <Col>\n                                Lista de asistencia\n                            </Col>\n                        </Row>\n                    </Card.Header>\n                    <Card.Body className=\"center-text\">\n                        <Card.Img src={Asistencia} />\n                        <Card.Text>\n                            <h4>\n                                <b>Asistencia tomada</b>\n                            </h4>\n                            <h5>\n                                Espere hasta mañana para poder tomar asistencia.\n                            </h5>\n                        </Card.Text>\n                    </Card.Body>\n                </Card >\n            )\n        }\n    }\n}\n\nexport default Lista;","import React, {Component} from 'react';\nimport {Nav, Tab} from \"react-bootstrap\";\nimport Registro from \"./Registro/Registro\";\nimport Lista from \"./Lista/Lista\";\n\nclass Asistencia extends Component {\n    render() {\n        return (\n            <div>\n                <Tab.Container id=\"main-tabs\" defaultActiveKey=\"lista\">\n                    <Nav fill variant=\"pills\" className=\"redtabs\">\n                        <Nav.Item>\n                            <Nav.Link eventKey=\"lista\">Toma de asistencia</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <Nav.Link className=\"nav-item-center\" eventKey=\"registro\">Registro</Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                    <Tab.Content>\n                        <Tab.Pane eventKey=\"lista\">\n                            <Lista/>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"registro\">\n                            <Registro/>\n                        </Tab.Pane>\n                    </Tab.Content>\n                </Tab.Container>\n            </div>\n        );\n    }\n}\n\nexport default Asistencia;","import { PDFDocument, StandardFonts, rgb } from \"pdf-lib\";\nimport { IAlumno } from \"../models/Alumno\";\nimport { IDocente } from \"../models/Docente\";\n\nasync function generatePDFAdeudo(alumno: IAlumno) {\n  // Create a new PDFDocument\n  const pdfDoc = await PDFDocument.create();\n\n  // Embed the Times Roman font\n  const helvetica = await pdfDoc.embedFont(StandardFonts.Helvetica);\n  const helveticaBold = await pdfDoc.embedFont(StandardFonts.HelveticaBold);\n\n  // Add a blank page to the document\n  const page = pdfDoc.addPage();\n\n  // Get the width and height of the page\n  const { width, height } = page.getSize();\n\n  // Draw a string of text toward the top of the page\n  const fontSize = 10;\n  const jpgImageBytes = await fetch(\n    \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSe14FjZbUhI9_TkDDeKlX3nwlODaNRw2kN95v5D3ixphPjy9csIIj96JxTKNYjQEDOhNE&usqp=CAU\"\n  ).then((res) => res.arrayBuffer());\n  const jpgImage = await pdfDoc.embedJpg(jpgImageBytes);\n  const jpgDims = jpgImage.scale(0.5);\n  const X = width / 10;\n  page.drawImage(jpgImage, {\n    x: X,\n    y: (height / 8) * 6,\n    width: jpgDims.width,\n    height: jpgDims.height,\n  }); // Logo\n  page.drawText(\"COLEGIO: CRECIENDO JUNTOS\\nCCT: 26PJN0246M\", {\n    x: X * 6,\n    y: (height / 8) * 6,\n    size: fontSize,\n    font: helvetica,\n    color: rgb(0, 0, 0),\n  });\n  page.drawText(\"ASUNTO: CARTA DE NO ADEUDO\", {\n    x: X * 6,\n    y: (height / 16) * 11,\n    size: fontSize,\n    font: helveticaBold,\n    color: rgb(0, 0, 0),\n  });\n  page.drawText(\"A QUIEN CORRESPONDA:\", {\n    x: X,\n    y: (height / 24) * 15,\n    size: fontSize,\n    font: helveticaBold,\n    color: rgb(0, 0, 0),\n  });\n  page.drawText(\n    `Quien suscribe C. Mtra. MARIA DE LOS ANGELES MARTINEZ CAMPA director de este plantel`,\n    {\n      x: X,\n      y: (height / 24) * 14,\n      size: fontSize,\n      font: helvetica,\n      color: rgb(0, 0, 0),\n    }\n  );\n  page.drawText(`HACE CONSTAR`, {\n    x: (width / 12) * 5,\n    y: (height / 48) * 26,\n    size: fontSize + 4,\n    font: helveticaBold,\n    color: rgb(0, 0, 0),\n  });\n  page.drawText(\n    `Que el alumno ${alumno.nombres} ${alumno.apellidoPaterno} ${alumno.apellidoMaterno} con CURP: ${alumno.curp} es alumno de este plantel`,\n    {\n      x: X,\n      y: (height / 48) * 24,\n      size: fontSize,\n      font: helvetica,\n      color: rgb(0, 0, 0),\n    }\n  );\n  page.drawText(\n    `educativo, el cual NO PRESENTA NINGUN TIPO DE ADEUDO a esta institucion, por concepto de`,\n    {\n      x: X,\n      y: (height / 48) * 23,\n      size: fontSize,\n      font: helvetica,\n      color: rgb(0, 0, 0),\n    }\n  );\n  page.drawText(`colegiaturas, inscripciones, libros y material.`, {\n    x: X,\n    y: (height / 48) * 22,\n    size: fontSize,\n    font: helvetica,\n    color: rgb(0, 0, 0),\n  });\n\n  page.drawText(\n    `Se extiende la presente CONSTANCIA al interesado para los fines personales que a el convenga en la`,\n    {\n      x: X,\n      y: (height / 48) * 20,\n      size: fontSize,\n      font: helvetica,\n      color: rgb(0, 0, 0),\n    }\n  );\n  var date = new Date();\n  const options: Intl.DateTimeFormatOptions = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  };\n  page.drawText(\n    `ciudad de Hermosillo, Sonora a ${date.toLocaleString(\"es-ES\", options)}.`,\n    {\n      x: X,\n      y: (height / 48) * 19,\n      size: fontSize,\n      font: helvetica,\n      color: rgb(0, 0, 0),\n    }\n  );\n\n  page.drawText(`ATENTAMENTE`, {\n    x: (width / 12) * 5,\n    y: (height / 48) * 9,\n    size: fontSize,\n    font: helvetica,\n    color: rgb(0, 0, 0),\n  });\n\n  page.drawText(`MTRA. MARIA DE LOS ANGELES MARTINEZ CAMPA`, {\n    x: (width / 12) * 3.4,\n    y: (height / 48) * 6,\n    size: fontSize,\n    font: helvetica,\n    color: rgb(0, 0, 0),\n  });\n\n  page.drawText(`DIRECTOR DEL PLANTEL`, {\n    x: (width / 12) * 4.7,\n    y: (height / 48) * 5,\n    size: fontSize,\n    font: helvetica,\n    color: rgb(0, 0, 0),\n  });\n  // Serialize the PDFDocument to bytes (a Uint8Array)\n  const pdfBytes = await pdfDoc.save();\n  const url = window.URL.createObjectURL(new Blob([pdfBytes]));\n  const link = document.createElement(\"a\");\n  link.href = url;\n  link.setAttribute(\"download\", \"file.pdf\");\n  document.body.appendChild(link);\n  link.click();\n}\n\nasync function generatePDFConducta(alumno: IAlumno) {\n  // Create a new PDFDocument\n  const pdfDoc = await PDFDocument.create();\n\n  // Embed the Times Roman font\n  const helvetica = await pdfDoc.embedFont(StandardFonts.Helvetica);\n  const helveticaBold = await pdfDoc.embedFont(StandardFonts.HelveticaBold);\n\n  // Add a blank page to the document\n  const page = pdfDoc.addPage();\n\n  // Get the width and height of the page\n  const { width, height } = page.getSize();\n\n  // Draw a string of text toward the top of the page\n  const fontSize = 10;\n  const jpgImageBytes = await fetch(\n    \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSe14FjZbUhI9_TkDDeKlX3nwlODaNRw2kN95v5D3ixphPjy9csIIj96JxTKNYjQEDOhNE&usqp=CAU\"\n  ).then((res) => res.arrayBuffer());\n  const jpgImage = await pdfDoc.embedJpg(jpgImageBytes);\n  const jpgDims = jpgImage.scale(0.5);\n  const X = width / 10;\n  page.drawImage(jpgImage, {\n    x: X,\n    y: (height / 8) * 6,\n    width: jpgDims.width,\n    height: jpgDims.height,\n  }); // Logo\n  page.drawText(\"COLEGIO: CRECIENDO JUNTOS\\nCCT: 26PJN0246M\", {\n    x: X * 6,\n    y: (height / 8) * 6,\n    size: fontSize,\n    font: helvetica,\n    color: rgb(0, 0, 0),\n  });\n  page.drawText(\"ASUNTO: CARTA DE CONDUCTA.\", {\n    x: X * 6,\n    y: (height / 16) * 11,\n    size: fontSize,\n    font: helveticaBold,\n    color: rgb(0, 0, 0),\n  });\n  page.drawText(\"A QUIEN CORRESPONDA:\", {\n    x: X,\n    y: (height / 24) * 15,\n    size: fontSize,\n    font: helveticaBold,\n    color: rgb(0, 0, 0),\n  });\n  page.drawText(\n    `Quien suscribe C. Mtra. MARIA DE LOS ANGELES MARTINEZ CAMPA director del preescolar CENDI`,\n    {\n      x: X,\n      y: (height / 48) * 28,\n      size: fontSize,\n      font: helvetica,\n      color: rgb(0, 0, 0),\n    }\n  );\n  page.drawText(\n    `CRECIENDO JUNTOS, hace constar que el alumno C. ${alumno.nombres} ${alumno.apellidoPaterno} ${alumno.apellidoMaterno},  perteneció a esta`,\n    {\n      x: X,\n      y: (height / 48) * 27,\n      size: fontSize,\n      font: helvetica,\n      color: rgb(0, 0, 0),\n    }\n  );\n  page.drawText(\n    `institución educativa tiempo durante el cual presento MUY BUENA CONDUCTA dentro de la institución,`,\n    {\n      x: X,\n      y: (height / 48) * 26,\n      size: fontSize,\n      font: helvetica,\n      color: rgb(0, 0, 0),\n    }\n  );\n  page.drawText(\n    `por lo que en mi calidad de director me permito recomendarlo como un excelente alumno incapaz de`,\n    {\n      x: X,\n      y: (height / 48) * 25,\n      size: fontSize,\n      font: helvetica,\n      color: rgb(0, 0, 0),\n    }\n  );\n\n  page.drawText(\n    `observar actitud alguna que altere la disciplina y el orden.`,\n    {\n      x: X,\n      y: (height / 48) * 24,\n      size: fontSize,\n      font: helvetica,\n      color: rgb(0, 0, 0),\n    }\n  );\n  page.drawText(\n    `Se extiende la presente CONSTANCIA al interesado para los fines personales que a el convenga en la`,\n    {\n      x: X,\n      y: (height / 48) * 22,\n      size: fontSize,\n      font: helvetica,\n      color: rgb(0, 0, 0),\n    }\n  );\n  var date = new Date();\n  const options: Intl.DateTimeFormatOptions = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  };\n  page.drawText(\n    `ciudad de Hermosillo, Sonora a ${date.toLocaleString(\"es-ES\", options)}.`,\n    {\n      x: X,\n      y: (height / 48) * 21,\n      size: fontSize,\n      font: helvetica,\n      color: rgb(0, 0, 0),\n    }\n  );\n\n  page.drawText(`ATENTAMENTE`, {\n    x: (width / 12) * 5,\n    y: (height / 48) * 9,\n    size: fontSize,\n    font: helvetica,\n    color: rgb(0, 0, 0),\n  });\n\n  page.drawText(`MTRA. MARIA DE LOS ANGELES MARTINEZ CAMPA`, {\n    x: (width / 12) * 3.4,\n    y: (height / 48) * 6,\n    size: fontSize,\n    font: helvetica,\n    color: rgb(0, 0, 0),\n  });\n\n  page.drawText(`DIRECTOR DEL PLANTEL`, {\n    x: (width / 12) * 4.7,\n    y: (height / 48) * 5,\n    size: fontSize,\n    font: helvetica,\n    color: rgb(0, 0, 0),\n  });\n  // Serialize the PDFDocument to bytes (a Uint8Array)\n  const pdfBytes = await pdfDoc.save();\n  const url = window.URL.createObjectURL(new Blob([pdfBytes]));\n  const link = document.createElement(\"a\");\n  link.href = url;\n  link.setAttribute(\"download\", \"file.pdf\");\n  document.body.appendChild(link);\n  link.click();\n}\n\nasync function generatePDFRecomendacion(\n  docente: IDocente,\n  startDate: Date,\n  endDate: Date\n) {\n  // Create a new PDFDocument\n  const pdfDoc = await PDFDocument.create();\n\n  // Embed the Times Roman font\n  const helvetica = await pdfDoc.embedFont(StandardFonts.Helvetica);\n  const helveticaBold = await pdfDoc.embedFont(StandardFonts.HelveticaBold);\n\n  // Add a blank page to the document\n  const page = pdfDoc.addPage();\n\n  // Get the width and height of the page\n  const { width, height } = page.getSize();\n\n  // Draw a string of text toward the top of the page\n  const fontSize = 10;\n  const jpgImageBytes = await fetch(\n    \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSe14FjZbUhI9_TkDDeKlX3nwlODaNRw2kN95v5D3ixphPjy9csIIj96JxTKNYjQEDOhNE&usqp=CAU\"\n  ).then((res) => res.arrayBuffer());\n  const jpgImage = await pdfDoc.embedJpg(jpgImageBytes);\n  const jpgDims = jpgImage.scale(0.5);\n  const X = width / 10;\n  const options: Intl.DateTimeFormatOptions = {\n    year: \"numeric\",\n    month: \"long\",\n  };\n  page.drawImage(jpgImage, {\n    x: X,\n    y: (height / 8) * 6,\n    width: jpgDims.width,\n    height: jpgDims.height,\n  }); // Logo\n  page.drawText(\"COLEGIO: CRECIENDO JUNTOS\\nCCT: 26PJN0246M\", {\n    x: X * 6,\n    y: (height / 8) * 6,\n    size: fontSize,\n    font: helvetica,\n    color: rgb(0, 0, 0),\n  });\n  page.drawText(\"ASUNTO: CARTA DE RECOMENDACIÓN.\", {\n    x: X * 6,\n    y: (height / 16) * 11,\n    size: fontSize,\n    font: helveticaBold,\n    color: rgb(0, 0, 0),\n  });\n  page.drawText(\"A QUIEN CORRESPONDA:\", {\n    x: X,\n    y: (height / 24) * 15,\n    size: fontSize,\n    font: helveticaBold,\n    color: rgb(0, 0, 0),\n  });\n  page.drawText(\n    `Por medio de la presente estoy recomendando ampliamente a la Lic. ${docente.nombres} ${docente.apellidoPaterno} ${docente.apellidoMaterno} quien`,\n    {\n      x: X,\n      y: (height / 48) * 28,\n      size: fontSize,\n      font: helvetica,\n      color: rgb(0, 0, 0),\n    }\n  );\n  page.drawText(\n    `laboro en nuestra institución durante el periodo de ${startDate.toLocaleString(\n      \"es-ES\",\n      options\n    )} a ${endDate.toLocaleString(\"es-ES\", options)} como maestra`,\n    {\n      x: X,\n      y: (height / 48) * 27,\n      size: fontSize,\n      font: helvetica,\n      color: rgb(0, 0, 0),\n    }\n  );\n  page.drawText(\n    `titular del grupo de ${docente.aulaAsignadaNavigation?.nombre}, y de quien puedo decir es, una persona responsable, honesta, entusiasta`,\n    {\n      x: X,\n      y: (height / 48) * 26,\n      size: fontSize,\n      font: helvetica,\n      color: rgb(0, 0, 0),\n    }\n  );\n  page.drawText(`y con un compromiso a su profesión.`, {\n    x: X,\n    y: (height / 48) * 25,\n    size: fontSize,\n    font: helvetica,\n    color: rgb(0, 0, 0),\n  });\n\n  var date = new Date();\n  page.drawText(\n    `Se extiende la presente en la ciudad de Hermosillo, Sonora a ${date.toLocaleString(\n      \"es-ES\",\n      options\n    )}.`,\n    {\n      x: X,\n      y: (height / 48) * 23,\n      size: fontSize,\n      font: helvetica,\n      color: rgb(0, 0, 0),\n    }\n  );\n\n  page.drawText(`ATENTAMENTE`, {\n    x: (width / 12) * 5,\n    y: (height / 48) * 9,\n    size: fontSize,\n    font: helvetica,\n    color: rgb(0, 0, 0),\n  });\n\n  page.drawText(`MTRA. MARIA DE LOS ANGELES MARTINEZ CAMPA`, {\n    x: (width / 12) * 3.4,\n    y: (height / 48) * 6,\n    size: fontSize,\n    font: helvetica,\n    color: rgb(0, 0, 0),\n  });\n\n  page.drawText(`DIRECTOR DEL PLANTEL`, {\n    x: (width / 12) * 4.7,\n    y: (height / 48) * 5,\n    size: fontSize,\n    font: helvetica,\n    color: rgb(0, 0, 0),\n  });\n  // Serialize the PDFDocument to bytes (a Uint8Array)\n  const pdfBytes = await pdfDoc.save();\n  const url = window.URL.createObjectURL(new Blob([pdfBytes]));\n  const link = document.createElement(\"a\");\n  link.href = url;\n  link.setAttribute(\"download\", \"file.pdf\");\n  document.body.appendChild(link);\n  link.click();\n}\n\nexport { generatePDFAdeudo, generatePDFConducta, generatePDFRecomendacion };\n","import React, {Component} from \"react\";\nimport {Button, Card, Col, Pagination, Row} from \"react-bootstrap\";\nimport {BsDownload} from \"react-icons/bs\";\nimport {IAlumno} from \"../../../../../models/Alumno\";\nimport {generatePDFAdeudo, generatePDFConducta} from \"../../../../../utils/PDFManager\";\nimport {ILoading, IPagination} from \"../../../../../App\";\nimport Spinning from \"../../../../Layout/Navigation/Spinning/Spinning\";\nimport \"./Alumnos.css\"\nimport {RequestType, send} from \"../../../../../utils/RequestManager\";\n\ninterface Props { }\n\nexport interface State extends ILoading, IPagination {\n    alumnos: IAlumno[],\n}\n\nclass Alumnos extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            alumnos: [],\n            totalPaginas: 0,\n            paginaActual: 0,\n            loading: true,\n        }\n        this.changePage = this.changePage.bind(this);\n    }\n\n    changePage(index: number) {\n        this.setState({ paginaActual: index })\n    }\n    \n    async componentDidMount() {\n        let response = await send<IAlumno[]>(RequestType.GET, \"Alumno\");\n        let alumnos = response.map(async (alumno: IAlumno) => {\n            alumno.isDeudor = await send<boolean>(RequestType.GET, \"Pago/isDeudor\", null, `${alumno.idAlumno}`);\n            return alumno;\n        });\n        this.setState({ alumnos: await Promise.all(alumnos), loading: false });\n        this.setState({ totalPaginas: Math.ceil(this.state.alumnos.length / 6) })\n    }\n\n    render() {\n        const items = [];\n        const { startIndex, endIndex } = (this.state.paginaActual === 0)\n            ? { startIndex: 0, endIndex: 6 }\n            : { startIndex: this.state.paginaActual * 6, endIndex: this.state.paginaActual * 6 + 6 };\n        for (let i = 0; i < this.state.totalPaginas; i++) {\n            items.push(<Pagination.Item key={i} active={i === this.state.paginaActual} onClick={() => this.changePage(i)}>{i + 1}</Pagination.Item>);\n        }\n        if (this.state.loading) { return (<Spinning />) }\n        return (\n            <Card>\n                <Card.Header as=\"h5\">\n                    <Row>\n                        <Col>\n                            Lista de alumnos\n                        </Col>\n                    </Row>\n                </Card.Header>\n                <Card.Body>\n                    {\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>Nombre</th>\n                                    <th>No adeudo</th>\n                                    <th>Conducta</th>\n                                </tr>\n                                {this.state.alumnos.slice(startIndex, endIndex).map((alumno: IAlumno) => {\n                                    return <tr>\n                                        <td>{alumno.idAlumno}</td>\n                                        <td>{alumno.nombres} {alumno.apellidoPaterno} {alumno.apellidoMaterno}</td>\n                                        <td>\n                                            {\n                                                alumno.isDeudor\n                                                    ? <Button variant=\"danger\" disabled={true}><BsDownload /></Button>\n                                                    : <Button variant=\"danger\" onClick={() => generatePDFAdeudo(alumno)}><BsDownload /></Button>\n                                            }\n                                        </td>\n                                        <td>\n                                            <Button variant=\"warning\" onClick={() => generatePDFConducta(alumno)}><BsDownload /></Button>\n                                        </td>\n                                    </tr>\n                                })}\n                            </tbody>\n                        </table>\n                    }\n                </Card.Body>\n                <Card.Footer >\n                    <Pagination className=\"center red\" size=\"lg\">\n                        {items}\n                    </Pagination>\n                </Card.Footer>\n            </Card>\n        );\n    }\n}\n\nexport default Alumnos;","import React, { Component } from \"react\";\nimport { BsDownload } from \"react-icons/bs\";\nimport { Button, Card, Col, Pagination, Row } from \"react-bootstrap\";\nimport { generatePDFRecomendacion } from \"../../../../../utils/PDFManager\";\nimport { ILoading, IPagination } from \"../../../../../App\";\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport { IDocente } from \"../../../../../models/Docente\";\nimport Spinning from \"../../../../Layout/Navigation/Spinning/Spinning\";\nimport \"./Docentes.css\"\nimport {RequestType, send} from \"../../../../../utils/RequestManager\";\n\ninterface Props { }\n\nexport interface State extends ILoading, IPagination {\n    docentes: IDocente[],\n    startDate: Date | null,\n    endDate: Date | null,\n}\n\nclass Docentes extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            docentes: [],\n            startDate: null,\n            endDate: null,\n            totalPaginas: 0,\n            paginaActual: 0,\n            loading: true,\n        }\n        this.changePage = this.changePage.bind(this);\n        this.handleDateEvent = this.handleDateEvent.bind(this);\n    }\n\n    changePage(index: number) {\n        this.setState({ paginaActual: index })\n    }\n\n    handleDateEvent(event: any, picker: any) {\n        this.setState({ startDate: picker.startDate._d });\n        this.setState({ endDate: picker.endDate._d });\n    }\n\n    async componentDidMount() {\n        this.setState({ docentes: await send<IDocente[]>(RequestType.GET, \"Docente\").finally(() => this.setState({ loading: false })) })\n        this.setState({ totalPaginas: Math.ceil(this.state.docentes.length / 6) })\n    }\n\n    render() {\n        const items = [];\n        const { startIndex, endIndex } = (this.state.paginaActual === 0)\n            ? { startIndex: 0, endIndex: 6 }\n            : { startIndex: this.state.paginaActual * 6, endIndex: this.state.paginaActual * 6 + 6 };\n        for (let i = 0; i < this.state.totalPaginas; i++) {\n            items.push(<Pagination.Item key={i} active={i === this.state.paginaActual} onClick={() => this.changePage(i)}>{i + 1}</Pagination.Item>);\n        }\n        if (this.state.loading) { return (<Spinning />) }\n        var startDate = this.state.startDate ? this.state.startDate : new Date();\n        var endDate = this.state.endDate ? this.state.endDate : new Date();\n        return (\n            <Card>\n                <Card.Header as=\"h5\">\n                    <Row>\n                        <Col>\n                            Lista de docentes\n                        </Col>\n                    </Row>\n                </Card.Header>\n                <Card.Body>\n                    {\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>Nombre</th>\n                                    <th>Periodo trabajado</th>\n                                    <th>Recomendación</th>\n                                </tr>\n                                {this.state.docentes.slice(startIndex, endIndex).map((docente: IDocente) => {\n                                    return <tr>\n                                        <td>{docente.idDocente}</td>\n                                        <td>{docente.nombres} {docente.apellidoPaterno} {docente.apellidoMaterno}</td>\n                                        <td width=\"25%\">\n                                            <DateRangePicker onEvent={this.handleDateEvent}\n                                                initialSettings={{ startDate: '1/1/2020', endDate: '3/1/2021' }}\n                                            >\n                                                <input id=\"datePicker\" type=\"text\" className=\"form-control\" />\n                                            </DateRangePicker>\n                                        </td>\n                                        <td>\n                                            {\n                                                (this.state.startDate != null && this.state.endDate != null)\n                                                    ? <Button className=\"btn-info\" onClick={() => generatePDFRecomendacion(docente, startDate, endDate)}><BsDownload /></Button>\n                                                    : <Button disabled={true} className=\"btn-info\"><BsDownload /></Button>\n                                            }\n\n                                        </td>\n                                    </tr>\n                                })}\n                            </tbody>\n                        </table>\n                    }\n                </Card.Body>\n                <Card.Footer >\n                    <Pagination className=\"center\" size=\"lg\">\n                        {items}\n                    </Pagination>\n                </Card.Footer>\n            </Card>\n        );\n    }\n}\n\nexport default Docentes;","import React, {Component} from \"react\";\nimport {Nav, Tab} from \"react-bootstrap\";\nimport {IAlumno} from \"../../../../models/Alumno\";\nimport {RequestType, send} from \"../../../../utils/RequestManager\";\nimport {ILoading} from \"../../../../App\";\nimport \"./Constancias.css\"\nimport Alumnos from \"./Alumnos/Alumnos\";\nimport Docentes from \"./Docentes/Docentes\";\nimport Spinning from \"../../../Layout/Navigation/Spinning/Spinning\";\n\ninterface Props {\n}\n\nexport interface State extends ILoading {\n    alumnos: IAlumno[],\n}\n\nclass Constancias extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            alumnos: [],\n            loading: true,\n        }\n    }\n\n    async componentDidMount() {\n        this.setState({alumnos: await send<IAlumno[]>(RequestType.GET, \"Alumno\").finally(() => this.setState({loading: false}))})\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<Spinning/>)\n        }\n        return (\n            <div>\n                <Tab.Container id=\"main-tabs\" defaultActiveKey=\"alumnos\">\n                    <Nav fill variant=\"pills\" className=\"redtabs\">\n                        <Nav.Item>\n                            <Nav.Link eventKey=\"alumnos\">Alumnos</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <Nav.Link className=\"nav-item-center\" eventKey=\"pagos\">Docentes</Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                    <Tab.Content>\n                        <Tab.Pane eventKey=\"alumnos\">\n                            <Alumnos/>\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"pagos\">\n                            <Docentes/>\n                        </Tab.Pane>\n                    </Tab.Content>\n                </Tab.Container>\n            </div>\n        );\n    }\n}\n\nexport default Constancias;","import { z } from 'zod';\nimport {id, text} from \"./Schema\";\n\nconst conceptoSchema = z.object({\n  idConcepto: id,\n  concepto: text,\n});\n\ntype IConcepto = z.TypeOf<typeof conceptoSchema>;\n\nexport type { IConcepto };\n\nexport { conceptoSchema };\n","import { alumnoSchema } from \"./Alumno\";\nimport { conceptoSchema } from \"./Concepto\";\nimport { tutorSchema } from \"./Tutor\";\nimport { z } from \"zod\";\nimport {numeric, text, id, file} from \"./Schema\";\n\nconst pagoSchema = z.object({\n  idPago: id,\n  fecha: z.date().default(new Date()),\n  cantidad: numeric,\n  concepto: numeric,\n  conceptoNavigation: conceptoSchema.nullable(),\n  comprobanteDePago: file,\n  formatoComprobante: text,\n  idTutor: numeric,\n  idTutorNavigation: tutorSchema.nullable(),\n  idAlumno: numeric,\n  idAlumnoNavigation: alumnoSchema.nullable(),\n});\n\ntype IPago = z.TypeOf<typeof pagoSchema>;\n\nexport type { IPago };\n\nexport { pagoSchema };\n","import React, { Component } from 'react';\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\nimport { setKeyValue } from \"../../../../../models/Functions\";\nimport { validate } from \"../../../../../utils/ValidationManager\";\nimport { RequestType, send } from \"../../../../../utils/RequestManager\";\nimport { IAlumno } from \"../../../../../models/Alumno\";\nimport { ITutor } from \"../../../../../models/Tutor\";\nimport { IPago, pagoSchema } from \"../../../../../models/Pago\";\nimport { IConcepto } from '../../../../../models/Concepto';\nimport { ZodIssue } from \"zod\";\nimport Swal from \"sweetalert2\";\nimport ErrorMessage from \"../../Error/ErrorMessage\";\n\nexport interface Props {\n    show: boolean,\n    handleClose: () => void\n}\n\nexport interface State {\n    pago: IPago,\n    tutores: ITutor[],\n    conceptos: IConcepto[],\n    alumnos: IAlumno[],\n    errors: Array<ZodIssue>,\n}\n\nclass Add extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            pago: {\n                idPago: 0,\n                fecha: new Date(),\n                cantidad: 0,\n                concepto: 0,\n                conceptoNavigation: null,\n                comprobanteDePago: \"\",\n                formatoComprobante: \"\",\n                idTutor: 0,\n                idTutorNavigation: null,\n                idAlumno: 0,\n                idAlumnoNavigation: null,\n            } as IPago,\n            tutores: [] as ITutor[],\n            conceptos: [] as IConcepto[],\n            alumnos: [] as IAlumno[],\n            errors: []\n        }\n        this.savePago = this.savePago.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.fetchAlumnos = this.fetchAlumnos.bind(this);\n    }\n\n    async componentDidMount() {\n        this.setState({ tutores: await send<ITutor[]>(RequestType.GET, \"Tutor\") })\n        this.setState({ conceptos: await send<IConcepto[]>(RequestType.GET, \"Concepto\") })\n    }\n\n    async handleInputChange(event: React.FormEvent<HTMLInputElement>) {\n        const name = event.currentTarget.name;\n        const value = event.currentTarget.value;\n        let pago = setKeyValue(this.state.pago, name as keyof IPago, value);\n        this.setState({\n            errors: await validate(name, pago, pagoSchema)\n        })\n        this.setState({ pago })\n        if (name === \"idTutor\") {\n            await this.fetchAlumnos(value);\n        }\n    }\n    \n    // async validateFile() {\n    //     const file = document.getElementById(\"comprobante\") as HTMLInputElement;\n    //     const fileName = file.value;\n    //     const fileExtension = fileName.substring(fileName.lastIndexOf('.') + 1);\n    //     if (fileExtension !== \"pdf\") {\n    //         Swal.fire({\n    //             title: \"Error\",\n    //             text: \"El archivo debe ser un PDF\",\n    //             icon: \"error\",\n    //             confirmButtonText: \"Aceptar\"\n    //         })\n    //         return false;\n    //     }\n    //     return true;\n    // }\n    //\n    // async validateFileSize() {\n    //     const file = document.getElementById(\"comprobante\") as HTMLInputElement;\n    //     if (file == null) return;\n    //     const fileSize = file.files[0].size;\n    //     if (fileSize > 5242880) {\n    //         await Swal.fire({\n    //             title: \"Error\",\n    //             text: \"El archivo no debe pesar más de 5MB\",\n    //             icon: \"error\",\n    //             confirmButtonText: \"Aceptar\"\n    //         })\n    //         return false;\n    //     }\n    //     return true;\n    // }\n\n    async handleInputFiles(event: React.ChangeEvent<any>) {\n        const file = event!.currentTarget!.files![0];\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        const that = this;\n        reader.onload = function () {\n            let formatoComprobante = `${reader.result?.toString().split(',')[0]}`;\n            let comprobanteDePago = `${reader.result?.toString().split(',')[1]}`;\n            let pago = {\n                ...that.state.pago,\n                comprobanteDePago,\n                formatoComprobante\n            }\n            that.setState({ pago })\n        }\n        reader.onerror = function (error) {\n            console.log('Error: ', error);\n        };\n    }\n\n    async fetchAlumnos(id: string) {\n        let alumnos = await send<IAlumno[]>(RequestType.GET, \"GetAlumnosByTutor\", null, parseInt(id));\n        this.setState({ alumnos });\n    }\n\n    async savePago() {\n        if (this.state.errors.length === 0) {\n            await send(RequestType.POST, \"Pago\", this.state.pago, null, \"\", this.props.handleClose);\n        } else {\n            await Swal.fire({\n                title: 'Error',\n                text: 'Revise los campos en rojo',\n                icon: 'error',\n                confirmButtonText: 'Ok'\n            })\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Modal show={this.props.show} onHide={this.props.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Agregar</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group controlId=\"formBasicCurp\">\n                            <Form.Label>Concepto</Form.Label>\n                            <Form.Text>\n                                <select required key={this.state.pago.idPago} name=\"concepto\" className=\"form-select\" defaultValue={this.state.pago.concepto} onChange={async (event: any) => await this.handleInputChange(event)}>\n                                    <option selected value=\"0\">Seleccione un concepto de pago.</option>\n                                    {\n                                        this.state.conceptos.map((concepto) => {\n                                            return (\n                                                <option key={concepto.idConcepto} selected={concepto.idConcepto === this.state.pago.concepto} defaultValue={this.state.pago.concepto} value={concepto.idConcepto}>{concepto.concepto}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </Form.Text>\n                            <ErrorMessage errors={this.state.errors} name=\"concepto\"/>\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicLastName\">\n                            <Form.Label>Monto</Form.Label>\n                            <Form.Control required value={this.state.pago.cantidad} onChange={(event: any) => this.handleInputChange(event)} name=\"cantidad\" type=\"number\" placeholder=\"Monto\" />\n                            <ErrorMessage errors={this.state.errors} name=\"cantidad\"/>\n                        </Form.Group>\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\n                            <Form.Label>Comprobante de pago</Form.Label>\n                            <Form.Control className=\"form-control\" type=\"file\" onChange={e => this.handleInputFiles(e)} />\n                            <ErrorMessage errors={this.state.errors} name=\"comprobanteDePago\"/>\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicCurp\">\n                            <Form.Label>Tutor</Form.Label>\n                            <Form.Text>\n                                <select required key={this.state.pago.idPago} name=\"idTutor\" className=\"form-select\" defaultValue={this.state.pago.idTutor} onChange={async (event: any) => await this.handleInputChange(event)}>\n                                    <option selected value=\"0\">Seleccione un tutor</option>\n                                    {\n                                        this.state.tutores.map((tutor) => {\n                                            return (\n                                                <option key={tutor.idTutor} selected={tutor.idTutor === this.state.pago.idTutor} defaultValue={this.state.pago.idTutor} value={tutor.idTutor}>{tutor.nombres} {tutor.apellidoPaterno} {tutor.apellidoMaterno}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </Form.Text>\n                            <ErrorMessage errors={this.state.errors} name=\"idTutor\"/>\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicCurp\">\n                            <Form.Label>Alumno</Form.Label>\n                            <Form.Text>\n                                <select required key={this.state.pago.idPago} name=\"idAlumno\" className=\"form-select\" defaultValue={this.state.pago.idTutor} onChange={async (event: any) => await this.handleInputChange(event)}>\n                                    <option selected value=\"0\">Seleccione un alumno</option>\n                                    {\n                                        this.state.alumnos.map((alumno) => {\n                                            return (\n                                                <option key={alumno.idAlumno} selected={alumno.idAlumno === this.state.pago.idAlumno} defaultValue={this.state.pago.idAlumno} value={alumno.idAlumno}>{alumno.nombres} {alumno.apellidoPaterno} {alumno.apellidoMaterno}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </Form.Text>\n                            <ErrorMessage errors={this.state.errors} name=\"idAlumno\"/>\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Row>\n                            <Col>\n                                <Button className=\"btn-block\" variant=\"primary\" type=\"submit\" onClick={this.savePago}>Guardar</Button>\n                            </Col>\n                        </Row>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default Add;\n\n","import React, {Component} from 'react'\nimport {IPago} from '../../../../models/Pago'\nimport {Button, Card, Col, Pagination, Row, Table} from 'react-bootstrap';\nimport Add from './Modals/Add';\nimport {RequestType, send} from '../../../../utils/RequestManager';\nimport {FaMoneyBill} from 'react-icons/fa';\nimport Spinning from \"../../../Layout/Navigation/Spinning/Spinning\";\nimport {ILoading, IPagination} from '../../../../App';\n\nexport interface Props {\n\n}\n\nexport interface State extends ILoading, IPagination {\n    pagos: IPago[],\n    pago: IPago,\n    showAdd: boolean\n}\n\nexport default class Pagos extends Component<Props, State> {\n    constructor(props: any) {\n        super(props)\n        this.state = {\n            pagos: [],\n            pago: {} as IPago,\n            totalPaginas: 0,\n            paginaActual: 0,\n            showAdd: false,\n            loading: true\n        }\n        this.handleClose = this.handleClose.bind(this)\n        this.handleShow = this.handleShow.bind(this)\n        this.changePage = this.changePage.bind(this);\n        this.updateState = this.updateState.bind(this);\n    }\n\n    changePage(index: number) {\n        this.setState({ paginaActual: index })\n    }\n\n    async getComprobante(id: number) {\n        const data = await send<string>(RequestType.GET, \"Comprobante\", null, id)\n        window.open(data)\n    }\n\n    handleShow() {\n        this.setState({ showAdd: true })\n    }\n\n    async handleClose() {\n        this.setState({ showAdd: false })\n        await this.updateState()\n    }\n\n    async updateState() {\n        this.setState({ pagos: await send<IPago[]>(RequestType.GET, \"Pago\").finally(() => this.setState({ loading: false })) })\n        this.setState({ totalPaginas: Math.ceil(this.state.pagos.length / 6) })\n    }\n\n    async componentDidMount() {\n        this.updateState()\n    }\n\n    render() {\n        const items = [];\n        const { startIndex, endIndex } = (this.state.paginaActual === 0)\n            ? { startIndex: 0, endIndex: 6 }\n            : { startIndex: this.state.paginaActual * 6, endIndex: this.state.paginaActual * 6 + 6 };\n        for (let i = 0; i < this.state.totalPaginas; i++) {\n            items.push(<Pagination.Item key={i} active={i === this.state.paginaActual} onClick={() => this.changePage(i)}>{i + 1}</Pagination.Item>);\n        }\n        if (this.state.loading) { return (<Spinning />) }\n        return (\n            <div>\n                <Card>\n                    <Card.Header>\n                        <Row>\n                            <Col>\n                            </Col>\n                            <Col style={{ textAlign: \"center\" }}>\n                                Control de Pagos\n                            </Col>\n                            <Col>\n                                <Button className=\"headerButton btn-sm\" variant=\"warning\" onClick={this.handleShow}>Agregar</Button>\n                            </Col>\n                        </Row>\n                    </Card.Header>\n                    <Card.Body>\n                        {\n                            <div className=\"table-responsive table-responsive-sm\">\n                                <Table>\n                                    <thead>\n                                        <tr>\n                                            <th></th>\n                                            <th>Fecha</th>\n                                            <th>Tutor</th>\n                                            <th>Alumno</th>\n                                            <th>Cantidad</th>\n                                            <th>Concepto</th>\n                                            <th>Comprobante</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            this.state.pagos.slice(startIndex, endIndex).map((pago) => (\n                                                <tr key={pago.idPago}>\n                                                    <td><FaMoneyBill></FaMoneyBill></td>\n                                                    <td>{pago.fecha.toString().slice(0, 10)}</td>\n                                                    <td>{pago.idTutorNavigation?.nombres} {pago.idTutorNavigation?.apellidoPaterno} {pago.idTutorNavigation?.apellidoMaterno}</td>\n                                                    <td>{pago.idAlumnoNavigation?.nombres} {pago.idAlumnoNavigation?.apellidoPaterno} {pago.idAlumnoNavigation?.apellidoMaterno}</td>\n                                                    <td>${pago.cantidad}</td>\n                                                    <td>{pago.conceptoNavigation?.concepto}</td>\n                                                    <td>\n                                                        <Button variant=\"info\" onClick={async () => await this.getComprobante(pago.idPago)} target=\"_blank\">Ver</Button>\n                                                    </td>\n                                                </tr>\n                                            ))\n                                        }\n                                    </tbody>\n                                </Table>\n                            </div>\n                        }\n                    </Card.Body>\n                    <Card.Footer>\n                        <Pagination className=\"center red\" size=\"lg\">\n                            {items}\n                        </Pagination>\n                    </Card.Footer>\n                </Card>\n                {this.state.showAdd && <Add show={this.state.showAdd} handleClose={this.handleClose} />}\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin } from '../../utils/LoginManager';\n\nconst AdminRoute = ({ component: Component, ...rest }: any) => {\n    return (\n        <Route {...rest} render={props => (\n            isLogin() && sessionStorage.getItem(\"administrador\") === \"true\" ?\n                <Component {...props} />\n                : <Redirect to=\"/asistencia\" />\n        )} />\n    );\n};\n\nexport default AdminRoute;","import React, { Component } from 'react';\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport { aulaSchema, IAula } from \"../../../../../models/Aula\";\nimport { setKeyValue } from \"../../../../../models/Functions\";\nimport { validate } from \"../../../../../utils/ValidationManager\";\nimport { RequestType, send } from \"../../../../../utils/RequestManager\";\nimport { ZodIssue } from \"zod\";\nimport Swal from \"sweetalert2\";\nimport ErrorMessage from \"../../Error/ErrorMessage\";\n\nexport interface Props {\n    show: boolean,\n    aula: IAula,\n    handleClose: () => void\n}\n\nexport interface State {\n    aula: IAula,\n    errors: Array<ZodIssue>,\n}\n\nclass Edit extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            aula: this.props.aula,\n            errors: [],\n        }\n        this.saveAula = this.saveAula.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    async handleInputChange(event: React.FormEvent<HTMLInputElement>) {\n        let aula = setKeyValue(this.state.aula, event.currentTarget.name as keyof IAula, event.currentTarget.value);\n        this.setState({\n            errors: await validate(event.currentTarget.name, aula, aulaSchema)\n        })\n        this.setState({ aula })\n    }\n\n    async saveAula() {\n        if (this.state.errors.length === 0) {\n            await send(RequestType.PUT, \"Aula\", this.state.aula, this.state.aula.idAula, \"\", this.props.handleClose)\n        } else {\n            await Swal.fire({\n                title: 'Error',\n                text: 'Revise los campos en rojo',\n                icon: 'error',\n                confirmButtonText: 'Ok'\n            })\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Modal show={this.props.show} onHide={this.props.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Editar</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group controlId=\"formBasicName\">\n                            <Form.Label>Nombres</Form.Label>\n                            <Form.Control value={this.state.aula.nombre} onChange={async (event: any) => await this.handleInputChange(event)} name=\"nombre\" type=\"text\" placeholder=\"Nombres\" />\n                            <ErrorMessage errors={this.state.errors} name=\"nombres\" />\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button className=\"btn-block\" variant=\"primary\" onClick={this.saveAula}>Guardar</Button>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default Edit;","import React, { Component } from 'react';\nimport { aulaSchema, IAula} from \"../../../../../models/Aula\";\nimport { Button, Col, Form, Modal, Row } from \"react-bootstrap\";\nimport { setKeyValue } from \"../../../../../models/Functions\";\nimport { validate } from \"../../../../../utils/ValidationManager\";\nimport { send, RequestType } from \"../../../../../utils/RequestManager\";\nimport Swal from \"sweetalert2\";\nimport { ZodIssue } from \"zod\";\nimport ErrorMessage from \"../../Error/ErrorMessage\";\n\nexport interface Props {\n    show: boolean,\n    handleClose: () => void\n}\n\nexport interface State {\n    aula: IAula,\n    errors: Array<ZodIssue>,\n}\n\nclass Add extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            aula: {\n                idAula: 0,\n                nombre: \"\",\n            } as IAula,\n            errors: [],\n        }\n        this.saveAula = this.saveAula.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    async handleInputChange(event: React.FormEvent<HTMLInputElement>) {\n        let aula = setKeyValue(this.state.aula, event.currentTarget.name as keyof IAula, event.currentTarget.value);\n        this.setState({\n            errors: await validate(event.currentTarget.name, aula, aulaSchema)\n        })\n        this.setState({ aula })\n    }\n\n    async saveAula() {\n        if (this.state.errors.length === 0) {\n            await send<IAula>(RequestType.POST, \"Aula\", this.state.aula, null, \"\", this.props.handleClose)\n        } else {\n            await Swal.fire({\n                title: 'Error',\n                text: 'Revise los campos en rojo',\n                icon: 'error',\n                confirmButtonText: 'Ok'\n            })\n        }\n\n    }\n\n    render() {\n        return (\n            <>\n                <Modal show={this.props.show} onHide={this.props.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Agregar</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form.Group controlId=\"formBasicName\">\n                            <Form.Label>Nombre</Form.Label>\n                            <Form.Control required value={this.state.aula.nombre} onChange={async (event: any) => await this.handleInputChange(event)} name=\"nombre\" type=\"text\" placeholder=\"Nombre del aula\" />\n                            <ErrorMessage errors={this.state.errors} name=\"nombre\" />\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Row>\n                            <Col>\n                                <Button className=\"btn-block\" variant=\"primary\" type=\"submit\" onClick={this.saveAula}>Guardar</Button>\n                            </Col>\n                        </Row>\n                    </Modal.Footer>\n                </Modal>\n            </>\n        );\n    }\n}\n\nexport default Add;\n\n","import React, {Component} from 'react';\nimport {ILoading, IPagination} from \"../../../../App\";\nimport {RequestType, send} from \"../../../../utils/RequestManager\";\nimport {IAula} from \"../../../../models/Aula\";\nimport {Button, Card, Col, Pagination, Row, Table} from \"react-bootstrap\";\nimport Spinning from \"../../../Layout/Navigation/Spinning/Spinning\";\nimport {FaCube, FaEdit} from \"react-icons/fa\";\nimport Edit from \"./Modals/Edit\";\nimport Add from \"./Modals/Add\";\n\nexport interface Props {\n\n}\n\nexport interface State extends ILoading, IPagination {\n    aulas: IAula[],\n    aula: IAula,\n    showEdit: boolean,\n    showAdd: boolean,\n}\n\nclass Aulas extends Component<Props, State> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            aulas: [],\n            aula: {} as IAula,\n            totalPaginas: 0,\n            paginaActual: 0,\n            showEdit: false,\n            showAdd: false,\n            loading: true\n        }\n        this.handleShow = this.handleShow.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    changePage(index: number) {\n        this.setState({ paginaActual: index })\n    }\n\n    handleShow(aula?: IAula) {\n        if (typeof aula === 'undefined') {\n            this.setState({ showAdd: true })\n        }\n        else {\n            this.setState({ aula })\n            this.setState({ showEdit: true })\n        }\n    }\n\n    async handleClose() {\n        this.setState({ showEdit: false })\n        this.setState({ showAdd: false })\n        await this.updateState();\n    }\n\n    async updateState() {\n        this.setState({ aulas: await send<IAula[]>(RequestType.GET, \"Aula\")})\n    }\n\n    async componentDidMount() {\n        this.setState({\n            aulas: await send<IAula[]>(RequestType.GET, \"Aula\").finally(() => this.setState({loading: false}))\n        })\n    }\n    \n    render() {\n        const items = [];\n        const { startIndex, endIndex } = (this.state.paginaActual === 0)\n            ? { startIndex: 0, endIndex: 6 }\n            : { startIndex: this.state.paginaActual * 6, endIndex: this.state.paginaActual * 6 + 6 };\n        for (let i = 0; i < this.state.totalPaginas; i++) {\n            items.push(<Pagination.Item key={i} active={i === this.state.paginaActual} onClick={() => this.changePage(i)}>{i + 1}</Pagination.Item>);\n        }\n        if (this.state.loading) {\n            return (\n                <Spinning />\n            )\n        }\n        return (\n            <Card>\n                <Card.Header as=\"h5\">\n                    <Row>\n                        <Col>\n                            Pagina {this.state.paginaActual + 1}\n                        </Col>\n                        <Col style={{ textAlign: \"center\" }}>\n                            Aulas\n                        </Col>\n                        <Col>\n                            <Button className=\"headerButton btn-sm\" variant=\"warning\" onClick={() => this.handleShow()}>Agregar</Button>\n                        </Col>\n                    </Row>\n                </Card.Header>\n                {this.state.showAdd && <Add show={this.state.showAdd} handleClose={this.handleClose} />}\n                <Card.Body>\n                    {\n                        <div className=\"table-responsive\">\n                            <Table>\n                                <thead>\n                                <tr>\n                                    <th></th>\n                                    <th>Nombre</th>\n                                    <th>Acciones</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {\n                                    this.state.aulas.slice(startIndex, endIndex).map((aula) => (\n                                        <tr key={aula.idAula}>\n                                            <td><FaCube/></td>\n                                            <td>{aula.nombre}</td>\n                                            <td>\n                                                <Button className=\"btn-block\" variant=\"warning\" onClick={() => this.handleShow(aula)}><FaEdit /></Button>\n                                            </td>\n                                        </tr>\n                                    ))\n                                }\n                                </tbody>\n                                {this.state.showEdit && <Edit show={this.state.showEdit} aula={this.state.aula} handleClose={this.handleClose} />}\n                            </Table>\n                        </div>\n                    }\n                </Card.Body>\n                <Card.Footer >\n                    <Pagination className=\"center red\" size=\"lg\">\n                        {items}\n                    </Pagination>\n                </Card.Footer>\n            </Card >\n        );\n    }\n}\n\nexport default Aulas;","import Layout from './components/Layout/Layout';\nimport Home from './components/Pages/Private/Home/Home';\nimport './App.css';\nimport { Container } from 'react-bootstrap';\nimport PrivateRoute from './components/Routes/PrivateRoute';\nimport PublicRoute from './components/Routes/PublicRoute';\nimport Login from './components/Pages/Public/Login/Login';\nimport Alumnos from './components/Pages/Private/Alumnos/Alumnos';\nimport Tutores from './components/Pages/Private/Tutores/Tutores';\nimport Docentes from './components/Pages/Private/Docentes/Docentes';\nimport Asistencia from './components/Pages/Private/Asistencia/Asistencia';\nimport Constancias from './components/Pages/Private/Constancias/Constancias';\nimport Pagos from './components/Pages/Private/Pagos/Pagos';\nimport AdminRoute from './components/Routes/AdminRoute';\nimport {Constants} from \"./Constants\";\nimport Aulas from \"./components/Pages/Private/Aulas/Aulas\";\n\nexport interface ILoading {\n  loading: boolean;\n}\n\nexport interface IPagination {\n  totalPaginas: number,\n  paginaActual: number,\n}\n\nfunction App() {\n  return (\n    <Layout>\n      <Container>\n        <PublicRoute restricted={true} component={Login} path=\"/login\" exact />\n        <PrivateRoute component={Home} path=\"/\" exact />\n        <PrivateRoute component={() => <Home title={Constants.Title}/> } path=\"/home\" exact />\n        <AdminRoute component={Alumnos} path=\"/alumnos\" />\n        <AdminRoute component={Tutores} path=\"/tutores\" />\n        <AdminRoute component={Docentes} path=\"/docentes\" />\n        <PrivateRoute component={Asistencia} path=\"/asistencia\" />\n        <AdminRoute component={Aulas} path=\"/aulas\" />\n        <AdminRoute component={Pagos} path=\"/pagos\" />\n        <AdminRoute component={Constancias} path=\"/constancias\" />  \n      </Container>\n    </Layout>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import App from './App';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport React, { FC } from \"react\";\n\nconst rootElement = document.getElementById('root');\n\nconst LightTheme = React.lazy(() => import('./themes/lightTheme'));\nconst DarkTheme = React.lazy(() => import('./themes/darkTheme'));\n\ninterface Props {}\n\nconst ThemeSelector: FC<Props> = ({ children }) => {\n    const CHOSEN_THEME = localStorage.getItem('TYPE_OF_THEME');\n    return (\n        <>\n            <React.Suspense fallback={<></>}>\n                {(CHOSEN_THEME === \"light\") && <LightTheme />}\n                {(CHOSEN_THEME === \"dark\") && <DarkTheme />}\n            </React.Suspense>\n            {children}\n        </>\n    )\n}\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <ThemeSelector />\n        <App />\n      <ThemeSelector />\n  </BrowserRouter>,\n  rootElement\n);\n\nreportWebVitals();\n"],"sourceRoot":""}